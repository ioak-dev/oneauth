{"version":3,"sources":["images/oneauth_white.svg","images/oneauth_black.svg","images/oneauth_white_small.svg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/SpaceReducer.ts","reducers/OaRoleReducer.ts","reducers/OaUserReducer.ts","reducers/AppReducer.ts","reducers/PermittedSpaceReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/MessageService.ts","components/Home/index.tsx","actions/AuthActions.ts","oakui/OakTextPlain.tsx","components/Utils.ts","oakui/icons/SendIcon.tsx","oakui/icons/IoakIcon.tsx","oakui/OakIcon.tsx","oakui/OakButton.tsx","components/Lib/RestTemplate.ts","components/Login/form/NewUser.tsx","components/Login/form/SigninPage.tsx","oakui/OakSpinner.tsx","components/Login/form/VerifySession.tsx","components/Login/form/ResetPassword.tsx","components/Login/form/ConfirmEmail.tsx","components/Login/form/NotificationMessage.tsx","components/Login/SpaceLogin.tsx","actions/ProfileActions.ts","components/Notification/NotificationMessage.tsx","components/Notification/index.tsx","components/Navigation/OaLinks.tsx","components/Navigation/SpaceLinks.tsx","oakui/OakAvatar.tsx","oakui/OakPopoverMenu.tsx","components/Navigation/Desktop.tsx","events/SearchEvent.ts","oakui/SearchBar.tsx","components/Navigation/Mobile.tsx","oakui/OakModal.tsx","oakui/OakTab.tsx","oakui/OakText.tsx","components/Navigation/ProfileSettings.tsx","components/Navigation/index.tsx","components/Constants.ts","actions/SpaceActions.ts","actions/AppActions.ts","actions/OaUserAction.ts","actions/OaRoleActions.ts","actions/PermittedSpaceAction.ts","components/Login/OaLogin.tsx","components/Auth/OakRoute.tsx","oakui/OakPrompt.tsx","components/ManageApp/Member.tsx","oakui/OakAutoComplete.tsx","components/ManageSpace/EditAdministrators.tsx","components/ManageSpace/EditSpace.tsx","components/ManageSpace/SpaceItem.tsx","components/ManageSpace/index.tsx","components/ManageApp/EditAdministrators.tsx","oakui/OakCheckbox.tsx","components/ManageApp/EditApp.tsx","components/ManageApp/AppDetails.tsx","components/ManageApp/MapSpaceItem.tsx","components/ManageApp/MapSpace.tsx","components/ManageApp/AppItem.tsx","components/ManageApp/index.tsx","components/SpaceHome/HomeLink.tsx","components/SpaceHome/ChangePassword.tsx","components/SpaceHome/UpdateProfile.tsx","components/SpaceHome/index.tsx","components/SpacePages/TestPage/index.tsx","components/Login/AppspaceLogin.tsx","components/AppspaceHome/HomeLink.tsx","components/AppspaceHome/ChangePassword.tsx","components/AppspaceHome/UpdateProfile.tsx","components/AppspaceHome/index.tsx","components/App/Content.tsx","components/Logo/index.tsx","components/AppFallback/HealthCheckFailed.tsx","components/AppFallback/HealthCheckProgress.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","initialState","isAuth","email","firstName","lastName","theme","textSize","themeColor","tenant","appStatus","data","combineReducers","authorization","state","action","type","console","log","payload","token","profile","space","app","oaUsers","oaRoles","permittedSpace","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","subject","Subject","sendMessage","name","signal","next","receiveMessage","asObservable","newId","uuidv4","Home","props","useEffect","className","getAuth","dispatch","addAuth","removeAuth","OakTextPlain","label","htmlFor","id","multiline","disabled","autoComplete","errorFields","value","onChange","handleChange","onFocus","handleFocus","placeholder","isEmptyOrSpaces","str","match","SendIcon","version","x","y","viewBox","enableBackground","style","dimension","transform","d","IoakIcon","fill","points","accent","width","height","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","OakIcon","getStyle","colorVar","chosenColor","color","getDimension","fontSize","size","svg","mat","fa","OakButton","variant","children","invert","small","align","onClick","icon","baseUrl","process","httpGet","endpoint","headers","axios","get","httpPost","post","httpPut","put","httpDelete","delete","connect","withCookies","useState","password","repeatpassword","resetCode","setData","errors","setErrors","stage","setStage","signupAction","event","preventDefault","baseAuthUrl","loginType","errorState","error","test","trim","toLowerCase","then","response","status","message","catch","e","finally","currentTarget","method","onSubmit","noValidate","switchToSigninPage","useDispatch","useSelector","emailConfirmationLink","setEmailConfirmationLink","signinAction","authorizeResponse","getSession","auth_key","sessionResponse","appId","cookies","set","redirectToRequestedApp","success","duration","Authorization","appResponse","appendString","Object","keys","queryParam","forEach","key","includes","window","location","href","redirect","history","push","onFacebookSignIn","facebookProfile","accessToken","first_name","last_name","onGoogleSignIn","googleProfile","tokenId","switchToResetPage","switchToSignupPage","clientId","buttonText","onSuccess","onFailure","onAutoLoadFinished","textButton","fields","callback","OakSpinner","VerifySession","authCode","requestLink","resetPassword","NotificationMessage","notification","queryString","require","setType","setAuthCode","spinner","setSpinner","notificationMessage","setNotificationMessage","setAppId","setQueryParam","verificationStep","setVerificationStep","eventBus","subscribe","unsubscribe","changeRoute","routeType","appIdRef","search","query","parse","auth","authKey","redirectToRequestedAppIfTokenIsValid","remove","src","oneauthBlack","alt","oneauthWhite","getProfile","setProfile","handleRemove","Notification","notificationList","setNotificationList","removeNotification","notificationData","filter","item","localCopy","unshift","setTimeout","addNotification","length","slice","reverse","map","data-test","OaLinks","to","activeClassName","SpaceLinks","OakAvatar","substring","showName","OakPopoverMenu","show","setShow","slots","setSlots","initializeViews","newSlots","React","Children","toArray","node","slot","addEventListener","document","getElementById","contains","target","toggle","labelVariant","mobilize","labelStyle","iconLeft","iconRight","right","dropdownContentStyle","elements","element","v-for","Desktop","setShowSearchBar","userProfileActions","setUserProfileActions","editProfile","logout","signin","login","transparent","searchTextChangedEvent$","BehaviorSubject","searchEvent$","SearchBar","searchText","setSearchText","searchTextChangedEventListener","spellCheck","autoFocus","required","xmlns","Mobile","showSearchBar","menu","toggleMenu","oneauthWhiteSmall","OakModal","visible","setVisible","escFunction","removeEventListener","keyCode","toggleVisibility","getmodalStyle","noheader","fullscreen","donotMobilize","OakTab","activeTab","setActiveTab","meta","slotName","switchTab","tab","OakText","ProfileSettings","oldPassword","newPassword","repeatPassword","passwordData","setPasswordData","handlePasswordChange","userId","withRouter","mobilemenu","chooseTheme","showSettings","transparentNavBar","firstLoad","showNavbar","editProfileDialog","setSpace","toggleDarkMode","toggleSettings","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL_PREDICT","API_URL_ARTICLE","API_URL_CATEGORY","API_URL_FAQ","API_URL_SR","API_URL_USER","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","API_SPACE_CREATE","API_SPACE_FETCH","API_SPACE_DELETE","API_APP_FETCH","API_APP_DELETE","API_ROLE_FETCH","API_PERMITTED_SPACE","API_HEALTHCHECK_HELLO","fetchSpace","fetchApp","fetchUsers","fetchRoles","updateRoles","fetchPermittedSpace","existingAdmins","OakRoute","runMidleware","middlewareName","readAuthenticationSpace","readAuthenticationAppspace","readAuthenticationOa","authenticateSpace","authenticateAppspace","authenticateOa","isAdmin","authenticate","params","cookieKey","appspace","secret","redirectHandler","redirectToSpaceLogin","redirectToAppspaceLogin","redirectToOaLogin","redirectToUnauthorized","spaceId","appspaceId","middlewares","component","OakPrompt","text","Member","confirmPromptOpen","setConfirmPromptOpen","member","_id","owner","domainId","deleteRoles","domainType","OakAutoComplete","searchOn","setSearchOn","criteria","setCriteria","undefined","dropdownFiltered","setDropdownFiltered","updateSearchResults","objects","searchCriteria","EditAdministrators","items","setItems","autoCompleteDropdownData","oaRole","oaUser","diff","arr","arr2","ret","item1","indexOf","list","adminList","val","some","toggleVisibilityHandler","EditSpace","days","hours","minutes","spaceData","setSpaceData","validateEmptyText","updateSpace","SpaceItem","editDialogOpen","setEditDialogOpen","adminDialogOpen","setAdminDialogOpen","deleteDialogOpen","setDeleteDialogOpen","countOfAdmins","setCountofAdmins","countOfApps","setCountOfApps","connectedApp","editAdmin","actionElements","deleteSpace","ManageSpace","dialogOpen","setDialogOpen","setSearchCriteria","view","setView","spaceList","createSpace","createdBy","OakCheckbox","checked","EditApp","protected","appData","setAppData","updateApp","AppDetails","jwtpassword","MapSpaceItem","appSpaceItem","deletePermittedSpace","MapSpace","oaSpace","existingSpacelist","availableSpaceList","updatePermittedSpace","AppItem","detailsDialogOpen","setDetailsDialogOpen","spaceMapDialogOpen","setSpaceMapDialogOpen","countOfSpaces","setCountOfSpaces","connectedSpace","editApp","confirmDeleteApp","deleteApp","ManageApp","appList","HomeLink","ChangePassword","oldpassword","handleSubmit","changePassword","goHome","UpdateProfile","baseUserUrl","updateProfile","TestPage","isAppSpaceLogin","themes","themecolor1","getTheme","themecolor2","themecolor3","themecolor4","createMuiTheme","palette","primary","main","secondary","user","exact","path","render","propsLocal","SpaceLogin","SpaceHome","AppspaceLogin","AppspaceHome","OaLogin","Logo","HealthCheckFailed","HealthCheckProgress","App","isVerified","allowAccess","healthCheck","setHealthCheck","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1dff78aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oneauth_white.9d65dbf7.svg\";","module.exports = __webpack_public_path__ + \"static/media/oneauth_black.541c2d42.svg\";","module.exports = __webpack_public_path__ + \"static/media/oneauth_white_small.b5a11904.svg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_AUTH:\r\n      console.log('GET_AUTH reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case ADD_AUTH:\r\n      console.log('ADD_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    case REMOVE_AUTH:\r\n      console.log('REMOVE_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        token: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  theme: 'theme_dark',\r\n  textSize: 'textsize_medium',\r\n  themeColor: 'themecolor1',\r\n  tenant: '',\r\n  appStatus: 'notmounted',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n      console.log('GET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case SET_PROFILE:\r\n      console.log('SET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_SPACE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_SPACE:\r\n      console.log('SET SPACE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_ROLE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ROLE:\r\n      console.log('SET SPACE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_ALL_USERS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_ALL_USERS:\r\n      console.log('SET SPACE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_APP } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_APP:\r\n      console.log('SET APP reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_PERMITTED_SPACE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_PERMITTED_SPACE:\r\n      console.log('SET PERMITTED SPACE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\nimport SpaceReducer from './SpaceReducer';\r\nimport OaRoleReducer from './OaRoleReducer';\r\nimport OaUserReducer from './OaUserReducer';\r\nimport AppReducer from './AppReducer';\r\nimport PermittedSpaceReducer from './PermittedSpaceReducer';\r\n\r\nexport default combineReducers({\r\n  authorization: AuthReducer,\r\n  profile: ProfileReducer,\r\n  space: SpaceReducer,\r\n  app: AppReducer,\r\n  oaUsers: OaUserReducer,\r\n  oaRoles: OaRoleReducer,\r\n  permittedSpace: PermittedSpaceReducer,\r\n});\r\n","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';\r\n\r\nexport const GET_USER = 'GET_USER';\r\nexport const ADD_USER = 'ADD_USER';\r\n\r\nexport const FETCH_ARTICLE = 'FETCH_ARTICLE';\r\nexport const FETCH_REQUEST = 'FETCH_REQUEST';\r\nexport const FETCH_STAGE = 'FETCH_STAGE';\r\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\n\r\nexport const UPDATE_SPACE = 'UPDATE_SPACE';\r\nexport const UPDATE_APP = 'UPDATE_APP';\r\nexport const UPDATE_SPACE_ADMIN = 'UPDATE_SPACE_ADMIN';\r\nexport const UPDATE_ROLE = 'UPDATE_ROLE';\r\nexport const UPDATE_PERMITTED_SPACE = 'UPDATE_PERMITTED_SPACE';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware) // ,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal = true, data?: {}) {\r\n  subject.next({\r\n    name,\r\n    signal,\r\n    data,\r\n  });\r\n}\r\n\r\nexport function clearMessages() {\r\n  subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n  return subject.asObservable();\r\n}\r\n\r\nexport function newMessageId() {\r\n  return Math.random();\r\n}\r\n\r\nexport function newId() {\r\n  return uuidv4();\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport Navigation from '../Navigation';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  logout: Function;\r\n}\r\nconst Home = (props: Props) => {\r\n  useEffect(() => {\r\n    sendMessage('navbar', true);\r\n  }, []);\r\n  return (\r\n    <div className=\"page-home\">\r\n      <div className=\"app-container smooth-page page-home--title\">\r\n        Secure identity and authentication provider\r\n      </div>\r\n      <div className=\"page-home--subtitle\">\r\n        Oneauth handles user account setup, password management and\r\n        authentication needs of your organization. Connect all your\r\n        applications/assets with a single user account per user. Supports\r\n        sign-in with social identity providers such as Google, Outlook and\r\n        Facebook.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n  dispatch({\r\n    type: GET_AUTH,\r\n  });\r\n};\r\n\r\nexport const addAuth = data => dispatch => {\r\n  dispatch({\r\n    type: ADD_AUTH,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const removeAuth = () => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_AUTH,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport './styles/oak-text-plain.scss';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  id: string;\r\n  data: any;\r\n  type?: string;\r\n  handleChange: any;\r\n  errorFields?: any;\r\n  disabled?: boolean;\r\n  rows?: number;\r\n  multiline?: boolean;\r\n  handleFocus?: Function;\r\n  placeholder?: string;\r\n}\r\nconst OakTextPlain = (props: Props) => {\r\n  const handleFocus = () => {\r\n    if (props.handleFocus) {\r\n      props.handleFocus();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"oak-text-plain\">\r\n      {props.label && <label htmlFor={props.id}>{props.label}</label>}\r\n      {!props.multiline && (\r\n        <input\r\n          disabled={props.disabled}\r\n          autoComplete=\"off\"\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          type={props.type ? props.type : 'text'}\r\n          name={props.id}\r\n          id={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n          onFocus={handleFocus}\r\n          placeholder={props.placeholder}\r\n        />\r\n      )}\r\n      {/* rows={props.rows ? props.rows : 4} */}\r\n      {props.multiline && (\r\n        <textarea\r\n          disabled={props.disabled}\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          id={props.id}\r\n          name={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n        />\r\n      )}\r\n      {/* {props.multiline && <div contentEditable={props.disabled ? false : true} suppressContentEditableWarning={true}\r\n                className={\"textarea \" + (props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                onBlur={handleChange}>{props.data[props.id]}</div>} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakTextPlain;\r\n","export function isEmptyOrSpaces(str) {\r\n  return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n  let found = false;\r\n  if (words) {\r\n    words.split(' ').forEach(word => {\r\n      if (text.match(new RegExp(`(\\\\w*${word}\\\\w*)`, 'gi'))) {\r\n        found = true;\r\n      }\r\n    });\r\n  }\r\n  return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n  const result = array.sort(function(o1, o2) {\r\n    if (isReverseOrder) {\r\n      return o1[property] > o2[property]\r\n        ? -1\r\n        : o1[property] < o2[property]\r\n        ? 1\r\n        : 0;\r\n    }\r\n    return o1[property] < o2[property]\r\n      ? -1\r\n      : o1[property] > o2[property]\r\n      ? 1\r\n      : 0;\r\n  });\r\n\r\n  return result;\r\n}\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  style: object;\r\n  accent: object;\r\n  dimension: object;\r\n}\r\nconst SendIcon = (props: Props) => {\r\n  return (\r\n    <svg\r\n      version=\"1.0\"\r\n      id=\"Layer_1\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 57 56\"\r\n      enableBackground=\"new 0 0 57 56\"\r\n      style={props.dimension}\r\n    >\r\n      <g id=\"Chat-Fenster\">\r\n        <g\r\n          id=\"chat_FAQ_Accordion2-Copy-13\"\r\n          transform=\"translate(-1364.000000, -1001.000000)\"\r\n        >\r\n          <g id=\"Send-Message\" transform=\"translate(397.000000, 1008.000000)\">\r\n            <g id=\"Send-Button\" transform=\"translate(990.000000, 10.000000)\">\r\n              <g id=\"Send_1_\">\r\n                <path\r\n                  style={props.style}\r\n                  d=\"M16,0.5c-0.1-0.1-0.3-0.1-0.4-0.1L-7,10.8c-0.1,0.1-0.2,0.2-0.2,0.3s0.1,0.3,0.2,0.3l6.4,3.1\r\n\t\t\t\t\t\tc0.1,0.1,0.3,0,0.4,0L6,9.9l-4.9,4.9C1,14.9,1,15,1,15.1l0.5,6.2c0,0.1,0.1,0.3,0.2,0.3h0.1c0.1,0,0.2,0,0.3-0.1l3.4-3.9l4.2,2\r\n\t\t\t\t\t\tc0.1,0,0.2,0,0.3,0s0.2-0.1,0.2-0.2l5.9-18.6C16.1,0.7,16.1,0.6,16,0.5z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SendIcon;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  style: object;\r\n  accent: object;\r\n  dimension: object;\r\n}\r\nconst IoakIcon = (props: Props) => {\r\n  return (\r\n    <svg viewBox=\"0 0 73 73\" style={props.dimension}>\r\n      <polygon\r\n        fill=\"#27AAE1\"\r\n        points=\"38.5,-3.8 37.9,-3.8 37.9,-3.8 38.5,-3.8 \"\r\n      />\r\n      <g>\r\n        <path\r\n          fill=\"#149ED9\"\r\n          d=\"M27.6,23c2.6-1.8,5.8-2.9,9.3-2.9c3.4,0,6.6,1.1,9.3,2.9l6.3-7.5c-4.3-3.2-9.7-5.2-15.6-5.2\r\n\t\tc-5.8,0-11.2,1.9-15.6,5.2L27.6,23z\"\r\n          style={props.accent}\r\n        />\r\n        <rect x=\"32\" y=\"37.4\" width=\"9.8\" height=\"25.6\" style={props.style} />\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"9.75\"\r\n          strokeMiterlimit=\"10\"\r\n          cx=\"36.9\"\r\n          cy=\"36.5\"\r\n          r=\"30.9\"\r\n          style={{ ...props.style, fill: 'none' }}\r\n        />\r\n        <polygon\r\n          fill=\"#27AAE1\"\r\n          points=\"37.2,-3.9 36.6,-3.9 36.6,-3.9 37.2,-3.9 \t\"\r\n        />\r\n        <circle cx=\"36.9\" cy=\"32.8\" r=\"7.8\" style={props.style} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IoakIcon;\r\n","import React from 'react';\r\nimport './styles/oak-icon.scss';\r\nimport SendIcon from './icons/SendIcon';\r\nimport IoakIcon from './icons/IoakIcon';\r\n\r\ninterface Props {\r\n  // pass either mat or svg or fa\r\n  // mat for material icon names\r\n  mat?: string;\r\n  // svg for custom svg icon names\r\n  svg?: string;\r\n  fa?: string;\r\n  size?: string;\r\n  color?: string; // theme names and actual color codes or names or variables\r\n  accent?: string;\r\n}\r\nconst OakIcon = (props: Props) => {\r\n  const getStyle = colorVar => {\r\n    const style: any = {};\r\n    let chosenColor = '';\r\n    switch (colorVar) {\r\n      case 'primary':\r\n        chosenColor = 'var(--color-primary-1)';\r\n        break;\r\n      case 'secondary':\r\n        chosenColor = 'var(--color-secondary-1)';\r\n        break;\r\n      case 'tertiary':\r\n        chosenColor = 'var(--color-tertiary-1)';\r\n        break;\r\n      case 'success':\r\n        chosenColor = 'var(--color-success)';\r\n        break;\r\n      case 'failure':\r\n        chosenColor = 'var(--color-failure)';\r\n        break;\r\n      case 'warning':\r\n        chosenColor = 'var(--color-warning)';\r\n        break;\r\n      default:\r\n        chosenColor = colorVar || 'var(--color-foreground-1)';\r\n    }\r\n    style.fill = chosenColor;\r\n    style.color = chosenColor;\r\n    style.stroke = chosenColor;\r\n    return style;\r\n  };\r\n  const getDimension = () => {\r\n    const dimension: any = {};\r\n    dimension.fontSize = props.size ? props.size : '24px';\r\n    if (props.svg) {\r\n      dimension.height = props.size ? props.size : '24px';\r\n      dimension.width = 'auto';\r\n    }\r\n    return dimension;\r\n  };\r\n  return (\r\n    <div className=\"oak-icon\">\r\n      {props.mat && (\r\n        <i\r\n          className=\"material-icons\"\r\n          style={{ ...getStyle(props.color), ...getDimension() }}\r\n        >\r\n          {props.mat}\r\n        </i>\r\n      )}\r\n      {props.fa && (\r\n        <i\r\n          className={`fontawesome-icons ${props.fa}`}\r\n          style={{ ...getStyle(props.color), ...getDimension() }}\r\n        >\r\n          {props.mat}\r\n        </i>\r\n      )}\r\n      {props.svg && props.svg === 'send' && (\r\n        <SendIcon\r\n          style={getStyle(props.color)}\r\n          accent={props.accent && getStyle(props.accent)}\r\n          dimension={getDimension()}\r\n        />\r\n      )}\r\n      {props.svg && props.svg === 'ioak' && (\r\n        <IoakIcon\r\n          style={getStyle(props.color)}\r\n          accent={props.accent && getStyle(props.accent)}\r\n          dimension={getDimension()}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakIcon;\r\n","import React, { ReactNode } from 'react';\r\nimport './styles/oak-button.scss';\r\nimport OakIcon from './OakIcon';\r\n\r\ninterface Props {\r\n  icon?: string; // points to \"mat\" material icon\r\n  fa?: string;\r\n  svg?: string;\r\n  action?: any;\r\n  variant?:\r\n    | 'block'\r\n    | 'outline'\r\n    | 'appear'\r\n    | 'disappear'\r\n    | 'regular'\r\n    | 'disabled'\r\n    | 'drama';\r\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\r\n  align?: 'left' | 'right' | 'center';\r\n  small?: boolean;\r\n  invert?: boolean;\r\n  children?: ReactNode;\r\n  type?: 'button' | 'submit';\r\n}\r\n\r\nconst OakButton = (props: Props) => {\r\n  const getStyle = () => {\r\n    let style = props.theme ? props.theme : '';\r\n    style += props.variant ? ` ${props.variant}` : '';\r\n\r\n    if (!props.children) {\r\n      style += ' icon';\r\n    }\r\n\r\n    style += props.invert ? ' invert' : '';\r\n\r\n    style += props.small ? ' small' : '';\r\n\r\n    style += props.align ? ` align-${props.align}` : '';\r\n\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    // eslint-disable-next-line react/button-has-type\r\n    <button className={`oak-button ${getStyle()}`} onClick={props.action}>\r\n      <div className=\"button-label-container\">\r\n        {props.icon && <OakIcon mat={props.icon} size=\"1.2em\" />}\r\n        {props.fa && <OakIcon fa={props.fa} size=\"1.2em\" />}\r\n        {props.svg && <OakIcon svg={props.svg} size=\"1.2em\" />}\r\n        {props.children && props.children}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OakButton;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n  return axios.get(baseUrl + endpoint, headers);\r\n  // .then(function(response) {\r\n  //     return Promise.resolve(response);\r\n  // }\r\n  // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n  return axios.post(baseUrl + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n  return axios.put(baseUrl + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n  return axios.delete(baseUrl + endpoint, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../../Types/GeneralTypes';\r\nimport OakTextPlain from '../../../oakui/OakTextPlain';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { httpPost, httpGet } from '../../Lib/RestTemplate';\r\nimport OakIcon from '../../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  switchToSigninPage: any;\r\n  loginType: string;\r\n  space: string;\r\n}\r\n\r\nconst NewUser = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n    resetCode: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('userdetails');\r\n\r\n  const signupAction = event => {\r\n    event.preventDefault();\r\n    let baseAuthUrl = `/auth/${props.loginType}`;\r\n    if (props.space) {\r\n      baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n    }\r\n    const errorState = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      repeatpassword: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.firstName)) {\r\n      error = true;\r\n      errorState.firstName = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.lastName)) {\r\n      error = true;\r\n      errorState.lastName = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.email)) {\r\n      error = true;\r\n      errorState.email = 'Cannot be empty';\r\n    }\r\n    if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        data.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      error = true;\r\n      errorState.email = 'Invalid email';\r\n    }\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      error = true;\r\n      errorState.password = 'Cannot be empty';\r\n    }\r\n    if (data.password !== data.repeatpassword) {\r\n      error = true;\r\n      errorState.repeatpassword = 'Password does not match';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseAuthUrl}/signup`,\r\n        {\r\n          firstName: data.firstName.trim(),\r\n          lastName: data.lastName.trim(),\r\n          email: data.email.trim().toLowerCase(),\r\n          password: data.password,\r\n        },\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            // sendMessage('notification', true, {\r\n            //   type: 'success',\r\n            //   message: 'Your account has been setup',\r\n            //   duration: 3000,\r\n            // });\r\n            // props.switchToSigninPage();\r\n            setStage('created');\r\n            sendMessage('login-notification', true, {\r\n              type: 'email-main',\r\n              message:\r\n                'Your account has been setup. Your account will be activated after you confirm your email. Please check your email for further instructions',\r\n            });\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Unknown error',\r\n            });\r\n          }\r\n        })\r\n        .catch(e => {\r\n          if (e.response?.status === 403) {\r\n            error = true;\r\n            errorState.email = 'User account already exists';\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Unknown error',\r\n            });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'userdetails') {\r\n      signupAction(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form method=\"GET\" onSubmit={handleSubmit} noValidate className=\"login\">\r\n      {stage === 'userdetails' && (\r\n        <div className=\"form-signup\">\r\n          <div>\r\n            <div className=\"label\">\r\n              {!errors.firstName && (\r\n                <div className=\"label-text\">First Name</div>\r\n              )}\r\n              {errors.firstName && (\r\n                <div className=\"error-text\">\r\n                  <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                  {errors.firstName}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <OakTextPlain\r\n              id=\"firstName\"\r\n              data={data}\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"label\">\r\n              {!errors.lastName && <div className=\"label-text\">Last Name</div>}\r\n              {errors.lastName && (\r\n                <div className=\"error-text\">\r\n                  <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                  {errors.lastName}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <OakTextPlain\r\n              id=\"lastName\"\r\n              data={data}\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"label\">\r\n              {!errors.email && <div className=\"label-text\">E-mail</div>}\r\n              {errors.email && (\r\n                <div className=\"error-text\">\r\n                  <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                  {errors.email}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <OakTextPlain\r\n              id=\"email\"\r\n              placeholder=\"example@domain.com\"\r\n              data={data}\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"label\">\r\n              {!errors.password && <div className=\"label-text\">Password</div>}\r\n              {errors.password && (\r\n                <div className=\"error-text\">\r\n                  <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                  {errors.password}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <OakTextPlain\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Choose a strong password\"\r\n              data={data}\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <div className=\"label\">\r\n              {!errors.repeatpassword && (\r\n                <div className=\"label-text\">Retype password</div>\r\n              )}\r\n              {errors.repeatpassword && (\r\n                <div className=\"error-text\">\r\n                  <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                  {errors.repeatpassword}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <OakTextPlain\r\n              type=\"password\"\r\n              id=\"repeatpassword\"\r\n              placeholder=\"Don't forget it\"\r\n              data={data}\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"action\">\r\n        {stage === 'userdetails' && (\r\n          <>\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={signupAction}>\r\n              Create Account\r\n            </OakButton>\r\n            <p className=\"hr\">or</p>\r\n          </>\r\n        )}\r\n        <div className=\"button-link\">\r\n          <div className=\"link\" onClick={props.switchToSigninPage}>\r\n            Log In\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(NewUser)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { getAuth, addAuth } from '../../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../../Types/GeneralTypes';\r\nimport OakTextPlain from '../../../oakui/OakTextPlain';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { sentPasswordChangeEmail } from '../../Auth/AuthService';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { httpPost, httpGet } from '../../Lib/RestTemplate';\r\nimport { fetchSpace } from '../../../actions/SpaceActions';\r\nimport { fetchApp } from '../../../actions/AppActions';\r\nimport fetchUsers from '../../../actions/OaUserAction';\r\nimport { fetchRoles } from '../../../actions/OaRoleActions';\r\nimport { setProfile } from '../../../actions/ProfileActions';\r\nimport OakIcon from '../../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  authorization: Authorization;\r\n  appId: string;\r\n  switchToSignupPage: any;\r\n  switchToResetPage: any;\r\n  loginType: string;\r\n  space: string;\r\n  queryParam: any;\r\n}\r\n\r\nconst SigninPage = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector(state => state.profile);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [emailConfirmationLink, setEmailConfirmationLink] = useState('hide');\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const signinAction = event => {\r\n    event.preventDefault();\r\n    let baseAuthUrl = `/auth/${props.loginType}`;\r\n    if (props.space) {\r\n      baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n    }\r\n    console.log(baseAuthUrl);\r\n    const errorState = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    setEmailConfirmationLink('hide');\r\n    if (isEmptyOrSpaces(data.email)) {\r\n      error = true;\r\n      errorState.email = 'Cannot be empty';\r\n    } else if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        data.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      error = true;\r\n      errorState.email = 'Invalid email';\r\n    }\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      error = true;\r\n      errorState.password = 'Cannot be empty';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseAuthUrl}/authorize`,\r\n        {\r\n          email: data.email.trim().toLowerCase(),\r\n          password: data.password,\r\n        },\r\n        null\r\n      )\r\n        .then((authorizeResponse: any) => {\r\n          getSession(baseAuthUrl, authorizeResponse);\r\n        })\r\n        .catch((error: any) => {\r\n          if (error.response?.status === 404) {\r\n            errorState.email = 'User account does not exist';\r\n          } else if (error.response?.status === 401) {\r\n            errorState.password = 'Incorrect password';\r\n          } else if (error.response?.status === 403) {\r\n            errorState.email = 'Email not confirmed';\r\n            setEmailConfirmationLink('showLink');\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const getSession = (baseAuthUrl, authorizeResponse) => {\r\n    if (authorizeResponse.status === 200) {\r\n      httpGet(`${baseAuthUrl}/session/${authorizeResponse.data.auth_key}`, null)\r\n        .then(sessionResponse => {\r\n          if (sessionResponse.status === 200) {\r\n            if (props.space && props.appId) {\r\n              props.cookies.set(props.space, authorizeResponse.data.auth_key);\r\n              redirectToRequestedApp(authorizeResponse, sessionResponse);\r\n            } else {\r\n              success(authorizeResponse, sessionResponse);\r\n            }\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          if (error.response.status === 404) {\r\n            sendMessage('notification', true, {\r\n              type: 'failure',\r\n              message: 'Invalid session token',\r\n              duration: 3000,\r\n            });\r\n          } else if (error.response.status === 401) {\r\n            sendMessage('notification', true, {\r\n              type: 'failure',\r\n              message: 'Session expired',\r\n              duration: 3000,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const redirectToRequestedApp = (authorizeResponse, sessionResponse) => {\r\n    httpGet(`/app/${props.appId}`, {\r\n      headers: {\r\n        Authorization: sessionResponse.data.token,\r\n      },\r\n    }).then(appResponse => {\r\n      let appendString = '';\r\n      Object.keys(props.queryParam).forEach(key => {\r\n        if (!['appId', 'type'].includes(key)) {\r\n          appendString += `&${key}=${props.queryParam[key]}`;\r\n        }\r\n      });\r\n      window.location.href = `${appResponse.data.data.redirect}?authKey=${authorizeResponse.data.auth_key}&space=${props.space}${appendString}`;\r\n    });\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const success = (authorizeResponse, sessionResponse) => {\r\n    sendMessage('loggedin', true);\r\n    if (props.space) {\r\n      props.cookies.set(props.space, authorizeResponse.data.auth_key);\r\n      props.history.push(`/${props.loginType}/${props.space}/home`);\r\n    } else {\r\n      // dispatch(fetchSpace(data));\r\n      // dispatch(fetchApp(data));\r\n      // dispatch(fetchUsers(data));\r\n      // dispatch(fetchRoles(data));\r\n      props.cookies.set('oneauth', authorizeResponse.data.auth_key);\r\n      props.history.push('/');\r\n    }\r\n  };\r\n\r\n  const resendActivationLink = () => {\r\n    setEmailConfirmationLink('showSent');\r\n  };\r\n\r\n  const onFacebookSignIn = facebookProfile => {\r\n    if (facebookProfile?.accessToken) {\r\n      sendMessage('spinner');\r\n      let baseAuthUrl = `/auth/${props.loginType}`;\r\n      if (props.space) {\r\n        baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n      }\r\n      httpPost(\r\n        `${baseAuthUrl}/authorize/facebook`,\r\n        {\r\n          email: facebookProfile.email,\r\n          firstName: facebookProfile.first_name,\r\n          lastName: facebookProfile.last_name,\r\n        },\r\n        null\r\n      )\r\n        .then((authorizeResponse: any) => {\r\n          getSession(baseAuthUrl, authorizeResponse);\r\n        })\r\n        .finally(() => {\r\n          sendMessage('notification', false);\r\n          sendMessage('spinner', false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const onGoogleSignIn = googleProfile => {\r\n    if (googleProfile?.tokenId) {\r\n      let baseAuthUrl = `/auth/${props.loginType}`;\r\n      if (props.space) {\r\n        baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n      }\r\n      sendMessage('notification', false);\r\n      sendMessage('spinner');\r\n      httpPost(\r\n        `${baseAuthUrl}/authorize/google/${googleProfile.tokenId}`,\r\n        null,\r\n        null\r\n      )\r\n        .then((authorizeResponse: any) => {\r\n          getSession(baseAuthUrl, authorizeResponse);\r\n        })\r\n        .finally(() => {\r\n          sendMessage('notification', false);\r\n          sendMessage('spinner', false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form method=\"GET\" onSubmit={signinAction} noValidate className=\"login\">\r\n      <div className=\"form-signin\">\r\n        <div>\r\n          <div className=\"label\">\r\n            {!errors.email && <div className=\"label-text\">Email</div>}\r\n            {errors.email && (\r\n              <div className=\"error-text\">\r\n                <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                {errors.email}\r\n              </div>\r\n            )}\r\n            {emailConfirmationLink === 'showLink' && (\r\n              <div className=\"link\" onClick={resendActivationLink}>\r\n                Resend confirmation link\r\n              </div>\r\n            )}\r\n            {emailConfirmationLink === 'showSent' && <>Activation link sent</>}\r\n          </div>\r\n          <OakTextPlain\r\n            id=\"email\"\r\n            data={data}\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className=\"label\">\r\n            {!errors.password && <div className=\"label-text\">Password</div>}\r\n            {errors.password && (\r\n              <div className=\"error-text\">\r\n                <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                {errors.password}\r\n              </div>\r\n            )}\r\n            <div className=\"link\" onClick={props.switchToResetPage}>\r\n              Forgot Password?\r\n            </div>\r\n          </div>\r\n          <OakTextPlain\r\n            id=\"password\"\r\n            type=\"password\"\r\n            data={data}\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"action\">\r\n        <OakButton variant=\"regular\" theme=\"primary\" action={signinAction}>\r\n          Log In\r\n        </OakButton>\r\n        <p className=\"hr\">or</p>\r\n        <div className=\"button-link\">\r\n          <div className=\"link\" onClick={props.switchToSignupPage}>\r\n            Create an account\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-top-3 social-signin\">\r\n        <div className=\"social-signin-container\">\r\n          <div className=\"social-google\">\r\n            <GoogleLogin\r\n              clientId=\"81306451496-fg67eb502dvfb50c31huhkbn481bi29h.apps.googleusercontent.com\"\r\n              buttonText=\"Google\"\r\n              onSuccess={onGoogleSignIn}\r\n              onFailure={onGoogleSignIn}\r\n              onAutoLoadFinished={onGoogleSignIn}\r\n            />\r\n          </div>\r\n          <div className=\"social-facebook\">\r\n            <FacebookLogin\r\n              appId=\"696666571109190\"\r\n              textButton=\"Facebook\"\r\n              fields=\"name,email,picture,first_name,last_name\"\r\n              onClick={onFacebookSignIn}\r\n              callback={onFacebookSignIn}\r\n              icon=\"fa-facebook-square\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth })(\r\n  withCookies(SigninPage)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-spinner.scss';\r\n\r\nconst OakSpinner = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"oak-spinner\">\r\n        <div className=\"spinner-wrapper\">\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakSpinner;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\n\r\nconst VerifySession = () => {\r\n  return (\r\n    <div className=\"verify-session typography-12\">\r\n      <div>verifying session</div>\r\n      <div>\r\n        <OakSpinner />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifySession;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../../Types/GeneralTypes';\r\nimport OakTextPlain from '../../../oakui/OakTextPlain';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { httpPost, httpGet } from '../../Lib/RestTemplate';\r\nimport OakIcon from '../../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  loginType: string;\r\n  authCode: string;\r\n  switchToSigninPage: any;\r\n  space: string;\r\n}\r\n\r\nconst ResetPassword = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('requestLink');\r\n\r\n  //   const [] = useState('');\r\n  useEffect(() => {\r\n    if (props.authCode) {\r\n      let baseAuthUrl = `/auth/${props.loginType}`;\r\n      if (props.space) {\r\n        baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n      }\r\n      sendMessage('login-spinner');\r\n      httpPost(\r\n        `${baseAuthUrl}/verifypasswordlink/${props.authCode}`,\r\n        {\r\n          password: data.password,\r\n        },\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setStage('setPassword');\r\n          } else {\r\n            setStage('invalidLink');\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure-main',\r\n              message: 'Password reset link you have entered is invalid',\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setStage('invalidLink');\r\n          sendMessage('login-notification', true, {\r\n            type: 'failure-main',\r\n            message: 'Password reset link you have entered is invalid',\r\n          });\r\n        })\r\n        .finally(() => sendMessage('login-spinner', false));\r\n    }\r\n  }, []);\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const requestLink = event => {\r\n    event.preventDefault();\r\n    let baseAuthUrl = `/auth/${props.loginType}`;\r\n    if (props.space) {\r\n      baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n    }\r\n    const errorState = {\r\n      email: '',\r\n      password: '',\r\n      repeatpassword: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.email)) {\r\n      error = true;\r\n      errorState.email = 'Cannot be empty';\r\n    } else if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        data.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      error = true;\r\n      errorState.email = 'Invalid email';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseAuthUrl}/resetpasswordlink`,\r\n        {\r\n          email: data.email.trim().toLowerCase(),\r\n        },\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setStage('linkSent');\r\n            sendMessage('login-notification', true, {\r\n              type: 'email-main',\r\n              message:\r\n                'Link to reset your password has been sent to your email. Please check your email for further instructions',\r\n            });\r\n          } else {\r\n            errorState.email = 'Invalid user email';\r\n          }\r\n        })\r\n        .catch(() => {\r\n          error = true;\r\n          errorState.email = 'User account does not exist';\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const resetPassword = event => {\r\n    event.preventDefault();\r\n    sendMessage('login-spinner');\r\n    let baseAuthUrl = `/auth/${props.loginType}`;\r\n    if (props.space) {\r\n      baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n    }\r\n    const errorState = {\r\n      email: '',\r\n      password: '',\r\n      repeatpassword: '',\r\n    };\r\n    let error = false;\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      error = true;\r\n      errorState.password = 'Cannot be empty';\r\n    }\r\n    if (data.password !== data.repeatpassword) {\r\n      error = true;\r\n      errorState.repeatpassword = 'Password does not match';\r\n    }\r\n    setErrors(errorState);\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseAuthUrl}/resetpassword/${props.authCode}`,\r\n        {\r\n          password: data.password,\r\n        },\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setStage('passwordUpdated');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Password has been updated. You can login with your new password now',\r\n            });\r\n          }\r\n        })\r\n        .finally(() => sendMessage('login-spinner', false));\r\n    } else {\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'setPassword') {\r\n      resetPassword(event);\r\n    } else if (stage === 'requestLink') {\r\n      requestLink(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form method=\"GET\" onSubmit={handleSubmit} noValidate className=\"login\">\r\n        {/* {stage === 'invalidLink' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"warning\" color=\"warning\" size=\"2em\" />\r\n            Password reset link is invalid\r\n          </div>\r\n        )} */}\r\n        {/* {stage === 'passwordUpdated' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"check_circle\" color=\"success\" size=\"2em\" />\r\n            Password updated\r\n          </div>\r\n        )} */}\r\n        {/* {stage === 'linkSent' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"check_circle\" color=\"success\" size=\"2em\" />\r\n            Link to reset your password has been sent to your email\r\n          </div>\r\n        )} */}\r\n        {stage === 'requestLink' && (\r\n          <div className=\"form-reset\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.email && <div className=\"label-text\">Email</div>}\r\n                {errors.email && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.email}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"email\"\r\n                placeholder=\"Email to send reset link\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {stage === 'setPassword' && (\r\n          <div className=\"form-reset\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.password && (\r\n                  <div className=\"label-text\">Set new password</div>\r\n                )}\r\n                {errors.password && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.password}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Choose a strong password\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.repeatpassword && (\r\n                  <div className=\"label-text\">Retype password</div>\r\n                )}\r\n                {errors.repeatpassword && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.repeatpassword}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                type=\"password\"\r\n                id=\"repeatpassword\"\r\n                placeholder=\"Don't forget it\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {stage === 'requestLink' && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={requestLink}>\r\n              Send Link\r\n            </OakButton>\r\n          )}\r\n          {stage === 'setPassword' && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={resetPassword}>\r\n              Update Password\r\n            </OakButton>\r\n          )}\r\n          {['setPassword', 'requestLink'].includes(stage) && (\r\n            <p className=\"hr\">or</p>\r\n          )}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.switchToSigninPage}>\r\n              Log In\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(ResetPassword)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../../Types/GeneralTypes';\r\nimport OakTextPlain from '../../../oakui/OakTextPlain';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { httpPost, httpGet } from '../../Lib/RestTemplate';\r\nimport OakIcon from '../../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  loginType: string;\r\n  authCode: string;\r\n  switchToSigninPage: any;\r\n  space: string;\r\n}\r\n\r\nconst ConfirmEmail = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('requestLink');\r\n\r\n  //   const [] = useState('');\r\n  useEffect(() => {\r\n    if (props.authCode) {\r\n      let baseAuthUrl = `/auth/${props.loginType}`;\r\n      if (props.space) {\r\n        baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n      }\r\n      sendMessage('login-spinner');\r\n      httpPost(\r\n        `${baseAuthUrl}/verifyemailconfirmationlink/${props.authCode}`,\r\n        null,\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setStage('confirmed');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Thank you for confirming your email. Your account is active. You can login now',\r\n            });\r\n          } else {\r\n            setStage('invalidLink');\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure-main',\r\n              message: 'Email confirmation link you have entered is not valid',\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setStage('invalidLink');\r\n          sendMessage('login-notification', true, {\r\n            type: 'failure-main',\r\n            message: 'Email confirmation link you have entered is not valid',\r\n          });\r\n        })\r\n        .finally(() => sendMessage('login-spinner', false));\r\n    }\r\n  }, []);\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const requestLink = event => {\r\n    event.preventDefault();\r\n    let baseAuthUrl = `/auth/${props.loginType}`;\r\n    if (props.space) {\r\n      baseAuthUrl = `${baseAuthUrl}/${props.space}`;\r\n    }\r\n    const errorState = {\r\n      email: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.email)) {\r\n      error = true;\r\n      errorState.email = 'Cannot be empty';\r\n    } else if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        data.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      error = true;\r\n      errorState.email = 'Invalid email';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseAuthUrl}/emailconfirmationlink`,\r\n        {\r\n          email: data.email.trim().toLowerCase(),\r\n        },\r\n        null\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setStage('linkSent');\r\n            sendMessage('login-notification', true, {\r\n              type: 'email-main',\r\n              message:\r\n                'Account activation link has been sent to your email. Your account will be activated, post email confirmation. Please check your email for further instructions',\r\n            });\r\n          } else {\r\n            errorState.email = 'Invalid user email';\r\n          }\r\n        })\r\n        .catch(() => {\r\n          error = true;\r\n          errorState.email = 'User account does not exist';\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'requestLink') {\r\n      requestLink(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form method=\"GET\" onSubmit={handleSubmit} noValidate className=\"login\">\r\n        {/* {stage === 'invalidLink' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"warning\" color=\"warning\" size=\"2em\" />\r\n            Email confirmation link is invalid\r\n          </div>\r\n        )} */}\r\n        {/* {stage === 'confirmed' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"check_circle\" color=\"success\" size=\"2em\" />\r\n            Your email is confirmed. You can login now\r\n          </div>\r\n        )} */}\r\n        {/* {stage === 'linkSent' && (\r\n          <div className=\"form-reset message typography-8\">\r\n            <OakIcon mat=\"check_circle\" color=\"success\" size=\"2em\" />\r\n            Account activation link has been sent to your email\r\n          </div>\r\n        )} */}\r\n        {stage === 'requestLink' && (\r\n          <div className=\"form-reset\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.email && <div className=\"label-text\">Email</div>}\r\n                {errors.email && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.email}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"email\"\r\n                placeholder=\"Email to activate\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {stage === 'requestLink' && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={requestLink}>\r\n              Send Link\r\n            </OakButton>\r\n          )}\r\n          {['requestLink'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.switchToSigninPage}>\r\n              Log In\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(ConfirmEmail)\r\n);\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakIcon from '../../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  notification: any;\r\n}\r\n\r\nconst NotificationMessage = (props: Props) => {\r\n  return (\r\n    <>\r\n      {props.notification.type && props.notification.message && (\r\n        <div className=\"login-notification\">\r\n          {props.notification.type === 'email-main' && (\r\n            <div className=\"record-prominent email\">\r\n              <div>\r\n                <OakIcon mat=\"mail_outline\" size=\"60px\" />\r\n              </div>\r\n              <div>{props.notification.message}</div>\r\n            </div>\r\n          )}\r\n          {props.notification.type === 'success-main' && (\r\n            <div className=\"record-prominent success\">\r\n              <div>\r\n                <OakIcon\r\n                  mat=\"check_circle_outline\"\r\n                  size=\"60px\"\r\n                  color=\"success\"\r\n                />\r\n              </div>\r\n              <div>{props.notification.message}</div>\r\n            </div>\r\n          )}\r\n          {props.notification.type === 'failure-main' && (\r\n            <div className=\"record-prominent failure\">\r\n              <div>\r\n                <OakIcon mat=\"error_outline\" size=\"60px\" color=\"failure\" />\r\n              </div>\r\n              <div>{props.notification.message}</div>\r\n            </div>\r\n          )}\r\n          {props.notification.type === 'success' && (\r\n            <div className=\"record success\">{props.notification.message}</div>\r\n          )}\r\n          {props.notification.type === 'failure' && (\r\n            <div className=\"record failure\">\r\n              <div>\r\n                <OakIcon mat=\"error_outline\" color=\"failure\" />\r\n              </div>\r\n              <div>{props.notification.message}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './SpaceLogin.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { sentPasswordChangeEmail } from '../Auth/AuthService';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport NewUser from './form/NewUser';\r\nimport SigninPage from './form/SigninPage';\r\nimport VerifySession from './form/VerifySession';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport ResetPassword from './form/ResetPassword';\r\nimport ConfirmEmail from './form/ConfirmEmail';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from './form/NotificationMessage';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  space: string;\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n  const loginType = 'space';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [type, setType] = useState('signin');\r\n  const [authCode, setAuthCode] = useState('');\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const [appId, setAppId] = useState('');\r\n  const [queryParam, setQueryParam] = useState<any>();\r\n  const [verificationStep, setVerificationStep] = useState(false);\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', false);\r\n\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'login-spinner') {\r\n        setSpinner(message.signal);\r\n        if (message.signal) {\r\n          setNotificationMessage({\r\n            type: '',\r\n            message: '',\r\n          });\r\n        }\r\n      } else if (message.name === 'login-notification') {\r\n        setNotificationMessage(message.data);\r\n        setSpinner(false);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  const changeRoute = routeType => {\r\n    setNotificationMessage({ type: '', message: '' });\r\n    props.history.push(`/space/${props.space}/login?type=${routeType}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVerificationStep(true);\r\n    let appIdRef = null;\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      setQueryParam({ ...query });\r\n      console.log(query);\r\n      if (query && query.type) {\r\n        setType(query.type);\r\n      } else {\r\n        setType('signin');\r\n      }\r\n      if (query && query.auth) {\r\n        setAuthCode(query.auth);\r\n      } else {\r\n        setAuthCode('');\r\n      }\r\n      if (query && query.appId) {\r\n        setAppId(query.appId);\r\n        appIdRef = query.appId;\r\n      } else {\r\n        setAppId('');\r\n      }\r\n    }\r\n    const authKey = props.cookies.get(props.space);\r\n    if (authorization.isAuth || authKey) {\r\n      if (appIdRef) {\r\n        redirectToRequestedAppIfTokenIsValid(\r\n          appIdRef,\r\n          authKey,\r\n          queryString.parse(props.location.search)\r\n        );\r\n      } else {\r\n        props.history.push(`/space/${props.space}/home`);\r\n      }\r\n    } else {\r\n      setVerificationStep(false);\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  const redirectToRequestedAppIfTokenIsValid = (\r\n    appIdRef,\r\n    authKey,\r\n    queryString\r\n  ) => {\r\n    console.log(appIdRef, authKey);\r\n    const baseAuthUrl = `/auth/space/${props.space}`;\r\n\r\n    console.log('***********');\r\n    console.log(authKey);\r\n    httpGet(`${baseAuthUrl}/session/${authKey}`, null)\r\n      .then(sessionResponse => {\r\n        console.log(sessionResponse);\r\n        if (sessionResponse.status === 200) {\r\n          redirectToRequestedApp(\r\n            appIdRef,\r\n            authKey,\r\n            sessionResponse.data.token,\r\n            queryString\r\n          );\r\n        } else {\r\n          props.cookies.remove(props.space);\r\n\r\n          setVerificationStep(false);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        props.cookies.remove(props.space);\r\n        setVerificationStep(false);\r\n      });\r\n  };\r\n\r\n  const redirectToRequestedApp = (appId, authKey, token, queryString) => {\r\n    httpGet(`/app/${appId}`, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }).then(appResponse => {\r\n      let appendString = '';\r\n      Object.keys(queryString).forEach(key => {\r\n        if (!['appId', 'type'].includes(key)) {\r\n          appendString += `&${key}=${queryString[key]}`;\r\n        }\r\n      });\r\n      window.location.href = `${appResponse.data.data.redirect}?authKey=${authKey}&space=${props.space}${appendString}`;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-login\">\r\n      <div className=\"overlay\">\r\n        <div className=\"container smooth-page\">\r\n          {props.profile.theme === 'theme_light' && (\r\n            <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n          )}\r\n          {props.profile.theme === 'theme_dark' && (\r\n            <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n          )}\r\n\r\n          {spinner && <OakSpinner />}\r\n          <NotificationMessage notification={notificationMessage} />\r\n\r\n          {!verificationStep && type === 'signin' && (\r\n            <div className=\"wrapper\">\r\n              <SigninPage\r\n                appId={appId}\r\n                switchToSignupPage={() => changeRoute('signup')}\r\n                switchToResetPage={() => changeRoute('reset')}\r\n                loginType={loginType}\r\n                queryParam={queryParam}\r\n                {...props}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'signup' && (\r\n            <div className=\"wrapper\">\r\n              <NewUser\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                loginType={loginType}\r\n                {...props}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'reset' && (\r\n            <div className=\"wrapper\">\r\n              <ResetPassword\r\n                loginType={loginType}\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'confirmemail' && (\r\n            <div className=\"wrapper\">\r\n              <ConfirmEmail\r\n                loginType={loginType}\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {verificationStep && <VerifySession />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(Login)\r\n);\r\n","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n  dispatch({\r\n    type: GET_PROFILE,\r\n  });\r\n};\r\n\r\nexport const setProfile = payload => dispatch => {\r\n  dispatch({\r\n    type: SET_PROFILE,\r\n    payload,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  notification: any;\r\n  handleRemove: any;\r\n}\r\n\r\nconst NotificationMessage = (props: Props) => {\r\n  return (\r\n    <div className={`message ${props.notification.type}`}>\r\n      {props.notification.type === 'running' && (\r\n        <div\r\n          className={`message-icon ${\r\n            props.notification.type === 'running' ? 'running' : ''\r\n          }`}\r\n        >\r\n          <i className=\"material-icons\">rotate_right</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'success' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">check_circle_outline</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'warning' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">warning</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'failure' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">error_outline</i>\r\n        </div>\r\n      )}\r\n      <div className=\"message-text\">{props.notification?.message}</div>\r\n      <div className=\"message-action\">\r\n        <i className=\"material-icons\" onClick={props.handleRemove}>\r\n          clear\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from './NotificationMessage';\r\n\r\nconst Notification = () => {\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationList, setNotificationList] = useState<any | undefined>([]);\r\n  const [data, setData] = useState<any>({ notificationList: [] });\r\n\r\n  const removeNotification = notificationData => {\r\n    setNotificationList(\r\n      notificationList.filter(item => {\r\n        return item.id !== notificationData.id;\r\n      })\r\n    );\r\n  };\r\n  const addNotification = notificationData => {\r\n    const localCopy = [...notificationList];\r\n    localCopy.unshift(notificationData);\r\n    // setNotificationList([notificationData].concat(notificationList));\r\n    setNotificationList(localCopy);\r\n    // console.log(localCopy);\r\n    if (notificationData.duration) {\r\n      setTimeout(() => {\r\n        removeNotification(notificationData);\r\n      }, notificationData.duration);\r\n    } else if (!notificationData.id) {\r\n      setTimeout(() => {\r\n        removeNotification(notificationData);\r\n      }, 5000);\r\n    }\r\n    // console.log(notificationList.splice(0, 100));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'notification') {\r\n        if (!message.signal) {\r\n          removeNotification(message.data);\r\n        } else {\r\n          removeNotification(message.data);\r\n          addNotification(message.data);\r\n          // turn off spinner when a notification arrives\r\n          setSpinner(false);\r\n\r\n          // if (message.data && message.data.duration) {\r\n          //   setTimeout(() => {\r\n          //     sendMessage('notification', false);\r\n          //   }, message.data.duration);\r\n          // }\r\n        }\r\n      }\r\n\r\n      if (message.name === 'spinner') {\r\n        setSpinner(message.signal);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {notificationList && notificationList.length > 0 && (\r\n        <div className=\"notification\">\r\n          {notificationList\r\n            .slice(0, 5)\r\n            .reverse()\r\n            .map(notification => (\r\n              <div key={notification.id || notification.message}>\r\n                <NotificationMessage\r\n                  notification={notification}\r\n                  handleRemove={removeNotification}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n      {/* {spinner && <div data-test=\"spinner\" className=\"lds-dual-ring\" />} */}\r\n      {spinner && <OakSpinner data-test=\"spinner\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  profile: Profile;\r\n}\r\n\r\nconst OaLinks = (props: Props) => {\r\n  return (\r\n    <div className=\"links\">\r\n      {props.authorization.isAuth && (\r\n        <>\r\n          <NavLink to=\"/home\" className=\"navitem\" activeClassName=\"active\">\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/managespace\"\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Manage Space\r\n          </NavLink>\r\n          <NavLink to=\"/manageapp\" className=\"navitem\" activeClassName=\"active\">\r\n            Manage App\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OaLinks;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  profile: Profile;\r\n  space: string;\r\n}\r\n\r\nconst SpaceLinks = (props: Props) => {\r\n  return (\r\n    <div className=\"links\">\r\n      {props.authorization.isAuth && (\r\n        <>\r\n          <NavLink\r\n            to={`/space/${props.space}/home`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            to={`/space/${props.space}/test`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Test Page\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpaceLinks;\r\n","import React, { useEffect } from 'react';\r\nimport './styles/oak-avatar.scss';\r\n\r\ninterface Props {\r\n  showName?: boolean;\r\n  size?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n}\r\nconst OakAvatar = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-avatar\">\r\n      {/* <AvatarImage\r\n      v-if=\"user.avatar\"\r\n      v-bind:reference=\"user.avatar\"\r\n      v-bind:size=\"size\"\r\n    /> */}\r\n      <div\r\n        className={`${props.size ? props.size : ''} avatar-icon typography-6`}\r\n      >\r\n        {`${props.firstName?.substring(0, 1)}${props.lastName?.substring(\r\n          0,\r\n          1\r\n        )}`}\r\n      </div>\r\n      {props.showName && <div className=\"avatar-name\">{props.firstName}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakAvatar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-popover-menu.scss';\r\nimport { newId } from '../events/MessageService';\r\nimport OakIcon from './OakIcon';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  elements: any;\r\n  labelVariant?: string;\r\n  theme?: string;\r\n  right?: boolean;\r\n  iconLeft?: string;\r\n  iconRight?: string;\r\n  mobilize?: boolean;\r\n  width?: string;\r\n  children?: any;\r\n}\r\n\r\nconst OakPopoverMenu = (props: Props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [slots, setSlots] = useState<any | {}>({});\r\n  const [id, setId] = useState(newId());\r\n\r\n  useEffect(() => {\r\n    initializeViews();\r\n  }, [props.children]);\r\n\r\n  const initializeViews = () => {\r\n    let newSlots = {};\r\n    React.Children.toArray(props.children).forEach((node: any) => {\r\n      newSlots = { ...newSlots, [node.props.slot]: node };\r\n    });\r\n    setSlots(newSlots);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', (e: any) => {\r\n      if (!document.getElementById(id)?.contains(e.target)) {\r\n        setShow(false);\r\n      }\r\n    });\r\n  });\r\n\r\n  const toggle = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const getStyle = () => {\r\n    let style = props.theme ? props.theme : '';\r\n    style += props.labelVariant ? ` ${props.labelVariant}` : '';\r\n    style += props.width ? ` ${props.width}` : '';\r\n    return style;\r\n  };\r\n  const dropdownContentStyle = () => {\r\n    let style = show ? 'show' : 'hide';\r\n    style += props.right ? ' right' : '';\r\n    return style;\r\n  };\r\n  const labelStyle = () => {\r\n    let style = show ? 'active' : '';\r\n    style += props.mobilize ? ' short-label' : '';\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    <div className={`oak-popover-menu ${getStyle()}`} id={id}>\r\n      {!slots.label && (\r\n        <div className={`label ${labelStyle()}`} onClick={toggle}>\r\n          {props.iconLeft && (\r\n            <div className=\"left-icon\">\r\n              <OakIcon mat={props.iconLeft} />\r\n            </div>\r\n          )}\r\n          <div className=\"label-text\">{props.label}</div>\r\n          <div className=\"right-icon\">\r\n            <OakIcon mat={props.iconRight} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {slots.label && (\r\n        <div className=\"label-custom\" onClick={toggle}>\r\n          {slots.label}\r\n        </div>\r\n      )}\r\n      <div\r\n        className={`dropdown-content ${dropdownContentStyle()}`}\r\n        onClick={toggle}\r\n      >\r\n        {props.elements.map(element => (\r\n          <div\r\n            v-for=\"element in elements\"\r\n            key={element.label}\r\n            className=\"element\"\r\n            onClick={element.action}\r\n          >\r\n            <OakIcon mat={element.icon} />\r\n            {element.label}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakPopoverMenu;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport OaLinks from './OaLinks';\r\nimport SpaceLinks from './SpaceLinks';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakAvatar from '../../oakui/OakAvatar';\r\nimport OakPopoverMenu from '../../oakui/OakPopoverMenu';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  login: Function;\r\n  transparent: boolean;\r\n  logout: Function;\r\n  toggleSettings: any;\r\n  space: string;\r\n  editProfile: Function;\r\n}\r\n\r\nconst Desktop = (props: Props) => {\r\n  const [showSearchBar, setShowSearchBar] = useState(false);\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [userProfileActions, setUserProfileActions] = useState<any[] | []>([]);\r\n\r\n  useEffect(() => {\r\n    if (authorization.isAuth) {\r\n      setUserProfileActions([\r\n        {\r\n          label: 'Profile settings',\r\n          action: props.editProfile,\r\n          icon: 'settings',\r\n        },\r\n        {\r\n          label: 'Sign out',\r\n          action: props.logout,\r\n          icon: 'exit_to_app',\r\n        },\r\n      ]);\r\n    } else {\r\n      console.log(props.space);\r\n      setUserProfileActions([\r\n        {\r\n          label: 'Sign in',\r\n          action: () => signin('signin'),\r\n          icon: 'person',\r\n        },\r\n        {\r\n          label: 'Sign up',\r\n          action: () => signin('signup'),\r\n          icon: 'person_add',\r\n        },\r\n      ]);\r\n    }\r\n  }, [authorization.isAuth, props.space]);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setShowSearchBar(message.signal);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const signin = type => {\r\n    props.login(type);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.transparent ? 'navbar desktop transparent' : 'navbar desktop'\r\n      }\r\n    >\r\n      <div className=\"left\">\r\n        {!props.transparent && props.profile.theme === 'theme_light' && (\r\n          <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n        )}\r\n        {(props.transparent || props.profile.theme === 'theme_dark') && (\r\n          <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n        )}\r\n        {!props.space && (\r\n          <OaLinks\r\n            authorization={props.authorization}\r\n            profile={props.profile}\r\n          />\r\n        )}\r\n        {props.space && (\r\n          <SpaceLinks\r\n            authorization={props.authorization}\r\n            profile={props.profile}\r\n            space={props.space}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"right\">\r\n        <div className=\"action\">\r\n          <OakPopoverMenu elements={userProfileActions} theme=\"primary\" right>\r\n            <div slot=\"label\" className=\"action-item\">\r\n              {authorization?.isAuth && (\r\n                <OakAvatar\r\n                  firstName={authorization?.firstName}\r\n                  lastName={authorization?.lastName}\r\n                />\r\n              )}\r\n              {!authorization?.isAuth && (\r\n                <i className=\"material-icons\">person</i>\r\n              )}\r\n            </div>\r\n          </OakPopoverMenu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>('');\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { useEffect, useState } from 'react';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean;\r\n}\r\n\r\nconst SearchBar = (props: Props) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const searchTextChangedEventListener = searchTextChangedEvent$.subscribe(\r\n      data => {\r\n        setSearchText(data);\r\n      }\r\n    );\r\n    return () => searchTextChangedEventListener.unsubscribe();\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    searchEvent$.next(searchText);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n      <div className={`search-bar${props.alt ? ' alt' : ''}`}>\r\n        <input\r\n          name=\"searchText\"\r\n          spellCheck={false}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\"\r\n          required\r\n          value={searchText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"icon\">\r\n          <i>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n            </svg>\r\n          </i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthWhiteSmall from '../../images/oneauth_white_small.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport OaLinks from './OaLinks';\r\nimport SpaceLinks from './SpaceLinks';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport OakButton from '../../oakui/OakButton';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  login: Function;\r\n  transparent: boolean;\r\n  logout: Function;\r\n  toggleSettings: any;\r\n  space: string;\r\n}\r\n\r\nconst Mobile = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    showSearchBar: false,\r\n    menu: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setData({ ...data, showSearchBar: message.signal });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setData({ ...data, menu: !data.menu });\r\n  };\r\n\r\n  const signin = type => {\r\n    props.login(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          props.transparent ? 'navbar mobile transparent' : 'navbar mobile'\r\n        }\r\n      >\r\n        <div className=\"left\">\r\n          {!data.showSearchBar &&\r\n            !props.transparent &&\r\n            props.profile.theme === 'theme_light' && (\r\n              <img className=\"logo\" src={oneauthBlack} alt=\"Mirror logo\" />\r\n            )}\r\n          {!data.showSearchBar &&\r\n            (props.transparent || props.profile.theme === 'theme_dark') && (\r\n              <img className=\"logo\" src={oneauthWhite} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar &&\r\n            !props.transparent &&\r\n            props.profile.theme === 'theme_light' && (\r\n              <img className=\"logo\" src={oneauthWhiteSmall} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar &&\r\n            (props.transparent || props.profile.theme === 'theme_dark') && (\r\n              <img className=\"logo\" src={oneauthWhiteSmall} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar && <SearchBar alt />}\r\n          {/* links */}\r\n        </div>\r\n        <div className=\"right\">\r\n          {/* <div className=\"settings-icon\" onClick={props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n          <div\r\n            className={data.menu ? 'menu active' : 'menu'}\r\n            onClick={toggleMenu}\r\n          >\r\n            <div />\r\n          </div>\r\n          {/* action login */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={data.menu ? 'slider show' : 'slider hide'}\r\n        onClick={toggleMenu}\r\n      >\r\n        <div\r\n          className={data.menu ? 'container' : 'container hidetext'}\r\n          onClick={toggleMenu}\r\n        >\r\n          <div className=\"action\">\r\n            {/* <div className=\"settings-icon\" onClick={props.toggleSettings}>\r\n                        {props.authorization.isAuth && <OakButton invert variant=\"appear\" small action={props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</OakButton>}\r\n                    </div> */}\r\n            <div className=\"buttons\">\r\n              {props.authorization.isAuth && (\r\n                <OakButton variant=\"appear\" small action={props.logout}>\r\n                  <i className=\"material-icons\">power_settings_new</i>Logout\r\n                </OakButton>\r\n              )}\r\n              {!props.authorization.isAuth && (\r\n                <OakButton\r\n                  variant=\"appear\"\r\n                  small\r\n                  action={() => signin('signin')}\r\n                >\r\n                  <i className=\"material-icons\">person</i>Login\r\n                </OakButton>\r\n              )}\r\n              {!props.authorization.isAuth && (\r\n                <OakButton\r\n                  variant=\"appear\"\r\n                  small\r\n                  action={() => signin('signup')}\r\n                >\r\n                  <i className=\"material-icons\">person_add</i>Signup\r\n                </OakButton>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {!props.space && (\r\n            <OaLinks\r\n              authorization={props.authorization}\r\n              profile={props.profile}\r\n            />\r\n          )}\r\n          {props.space && (\r\n            <SpaceLinks\r\n              authorization={props.authorization}\r\n              profile={props.profile}\r\n              space={props.space}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mobile;\r\n","import React, { useEffect, ReactNode, useState } from 'react';\r\nimport './styles/oak-modal.scss';\r\nimport OakIcon from './OakIcon';\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  toggleVisibility: any;\r\n  label?: string;\r\n  children?: ReactNode;\r\n  fullscreen?: boolean;\r\n  noheader?: boolean;\r\n  donotMobilize?: boolean;\r\n}\r\n\r\nconst OakModal = (props: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  useEffect(() => {\r\n    if (visible !== props.visible) {\r\n      if (props.visible) {\r\n        setVisible(props.visible);\r\n      } else {\r\n        setTimeout(() => setVisible(props.visible), 250);\r\n      }\r\n    }\r\n  }, [props.visible]);\r\n\r\n  useEffect(() => {\r\n    // if (visible) {\r\n    //   document.body.classList.add('oak-modal-open');\r\n    // } else {\r\n    //   document.body.classList.remove('oak-modal-open');\r\n    // }\r\n    document.addEventListener('keydown', escFunction, false);\r\n    return () => document.removeEventListener('keydown', escFunction, false);\r\n  }, [visible]);\r\n\r\n  const escFunction = event => {\r\n    if (event.keyCode === 27) {\r\n      if (visible) {\r\n        props.toggleVisibility();\r\n      }\r\n    }\r\n  };\r\n\r\n  const getmodalStyle = () => {\r\n    let style = '';\r\n    style += props.noheader ? ' noheader' : '';\r\n    style += props.fullscreen ? ' fullscreen' : '';\r\n    style += props.donotMobilize ? '' : ' mobilize';\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <div\r\n          className={\r\n            props.visible\r\n              ? `modal-root show ${getmodalStyle()}`\r\n              : `modal-root hide ${getmodalStyle()}`\r\n          }\r\n        >\r\n          <div className=\"backdrop-fade\" onClick={props.toggleVisibility} />\r\n          <div className=\"oak-modal\">\r\n            {/* {visible && ( */}\r\n            <div className=\"modal\">\r\n              <div\r\n                className={props.visible ? 'container' : 'container hidetext'}\r\n              >\r\n                <div className=\"modal-header\">\r\n                  {/* <div className=\"container\" data-test=\"toggle-visibility\"> */}\r\n\r\n                  <div className=\"left\">\r\n                    <div className=\"icon\">\r\n                      {/* <i className=\"material-icons\">blur_on</i> */}N\r\n                    </div>\r\n                    <div className=\"label one-liner\">{props.label}</div>\r\n                  </div>\r\n                  <div className=\"right\">\r\n                    <div onClick={props.toggleVisibility}>\r\n                      <i className=\"material-icons modal-close-icon\">close</i>\r\n                      {/* <div className=\"text-esc\">esc</div> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n                {props.children}\r\n              </div>\r\n            </div>\r\n            {/* )} */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OakModal;\r\n","import React, { useState, useEffect, ReactElement } from 'react';\r\nimport './styles/oak-tab.scss';\r\n\r\ninterface Props {\r\n  meta: any[];\r\n  children: any;\r\n}\r\n\r\nconst OakTab = (props: Props) => {\r\n  const [activeTab, setActiveTab] = useState('');\r\n  const [slots, setSlots] = useState<any | {}>({});\r\n\r\n  useEffect(() => {\r\n    if (!activeTab) {\r\n      setActiveTab(\r\n        props.meta && props.meta.length > 0 ? props.meta[0].slotName : ''\r\n      );\r\n    }\r\n    initializeViews();\r\n  }, [props.meta, props.children]);\r\n\r\n  const initializeViews = () => {\r\n    let newSlots = {};\r\n    React.Children.toArray(props.children).forEach((node: any) => {\r\n      newSlots = { ...newSlots, [node.props.slot]: node };\r\n    });\r\n    setSlots(newSlots);\r\n  };\r\n\r\n  const switchTab = tab => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <div className=\"oak-tab\">\r\n      <div className=\"header\">\r\n        {props.meta.map(item => (\r\n          <div\r\n            key={item.slotName}\r\n            className={`tab typography-6 ${\r\n              activeTab === item.slotName ? 'active' : ''\r\n            }`}\r\n            onClick={() => switchTab(item.slotName)}\r\n          >\r\n            <div className=\"icon\">\r\n              <i\r\n                className={`material-icons typography-8 ${\r\n                  activeTab === item.slotName ? 'active' : ''\r\n                }`}\r\n              >\r\n                {item.icon}\r\n              </i>\r\n            </div>\r\n            <div className=\"label\">{item.label}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {props.meta.map(item => (\r\n        <div\r\n          key={item.slotName}\r\n          className={`tab typography-6 ${\r\n            activeTab === item.slotName ? 'active' : ''\r\n          }`}\r\n          onClick={() => switchTab(item.slotName)}\r\n        />\r\n      ))}\r\n      {props.meta.map(item => (\r\n        <div\r\n          key={item.slotName}\r\n          className={`content ${\r\n            item.slotName === activeTab ? 'active' : 'inactive'\r\n          }`}\r\n        >\r\n          {slots[item.slotName]}\r\n          {/* <slot v-bind:name=\"item.slotName\" /> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakTab;\r\n","import React from 'react';\r\nimport './styles/oak-text-slide.scss';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  id: string;\r\n  data: any;\r\n  type?: string;\r\n  handleChange: any;\r\n  errorFields?: any;\r\n  disabled?: boolean;\r\n  rows?: number;\r\n  multiline?: boolean;\r\n  handleFocus?: Function;\r\n  placeholder?: string;\r\n}\r\nconst OakText = (props: Props) => {\r\n  const handleFocus = () => {\r\n    if (props.handleFocus) {\r\n      props.handleFocus();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"oak-text\">\r\n      {!props.multiline && (\r\n        <input\r\n          disabled={props.disabled}\r\n          autoComplete=\"off\"\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          type={props.type ? props.type : 'text'}\r\n          name={props.id}\r\n          id={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n          onFocus={handleFocus}\r\n        />\r\n      )}\r\n      {props.multiline && (\r\n        <textarea\r\n          disabled={props.disabled}\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          id={props.id}\r\n          name={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n        />\r\n      )}\r\n      <label\r\n        htmlFor={props.id}\r\n        className={props.data[props.id] ? 'active' : ''}\r\n      >\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakText;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport './profile-settings.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport OakTab from '../../oakui/OakTab';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  space: string;\r\n}\r\n\r\nconst ProfileSettings = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [passwordData, setPasswordData] = useState({\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    repeatPassword: '',\r\n  });\r\n  const [meta, setMeta] = useState([\r\n    { slotName: 'details', label: 'Basic details', icon: 'subject' },\r\n    { slotName: 'password', label: 'Change Password', icon: 'security' },\r\n  ]);\r\n\r\n  const handlePasswordChange = event => {\r\n    setPasswordData({\r\n      ...passwordData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const update = () => {\r\n    let baseAuthUrl = '/auth';\r\n    if (props.space) {\r\n      baseAuthUrl = `/auth/${props.space}`;\r\n    }\r\n    httpPost(\r\n      `${baseAuthUrl}/changepassword`,\r\n      {\r\n        userId: authorization.userId,\r\n        oldPassword: passwordData.oldPassword,\r\n        newPassword: passwordData.newPassword,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: authorization.token,\r\n        },\r\n      }\r\n    )\r\n      .then((response: any) => {\r\n        if (response.status === 200) {\r\n          setPasswordData({\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            repeatPassword: '',\r\n          });\r\n        } else {\r\n          sendMessage('notification', true, {\r\n            type: 'failure',\r\n            message: 'Failed with error',\r\n            duration: 3000,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.status === 401) {\r\n          sendMessage('notification', true, {\r\n            type: 'failure',\r\n            message:\r\n              'Password incorrect. Please enter your right credentials to update password',\r\n            duration: 3000,\r\n          });\r\n        } else {\r\n          sendMessage('notification', true, {\r\n            type: 'failure',\r\n            message: 'Failed with error',\r\n            duration: 3000,\r\n          });\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"profile-settings\">\r\n      <OakTab meta={meta}>\r\n        <div slot=\"details\">details</div>\r\n        <div slot=\"password\" className=\"change-password\">\r\n          <OakText\r\n            type=\"password\"\r\n            label=\"Old password\"\r\n            data={passwordData}\r\n            id=\"oldPassword\"\r\n            handleChange={e => handlePasswordChange(e)}\r\n          />\r\n          <OakText\r\n            type=\"password\"\r\n            label=\"New password\"\r\n            data={passwordData}\r\n            id=\"newPassword\"\r\n            handleChange={e => handlePasswordChange(e)}\r\n          />\r\n          <OakText\r\n            type=\"password\"\r\n            label=\"Retype password\"\r\n            data={passwordData}\r\n            id=\"repeatPassword\"\r\n            handleChange={e => handlePasswordChange(e)}\r\n          />\r\n          <OakButton theme=\"primary\" variant=\"drama\" action={update}>\r\n            Update password\r\n          </OakButton>\r\n        </div>\r\n      </OakTab>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport OakModal from '../../oakui/OakModal';\r\nimport OakTab from '../../oakui/OakTab';\r\nimport ProfileSettings from './ProfileSettings';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  profile: Profile;\r\n  login: Function;\r\n  transparent: boolean;\r\n  logout: Function;\r\n  toggleSettings: any;\r\n  history: any;\r\n  cookies: any;\r\n  location: any;\r\n  match: any;\r\n}\r\n\r\nconst Navigation = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector(state => state.profile);\r\n  const [data, setData] = useState({\r\n    visible: false,\r\n    mobilemenu: 'hide',\r\n    chooseTheme: false,\r\n    showSettings: false,\r\n    transparentNavBar: false,\r\n    firstLoad: true,\r\n    showNavbar: false,\r\n    editProfileDialog: false,\r\n  });\r\n\r\n  const [space, setSpace] = useState('');\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(event => {\r\n      if (event.name === 'spaceChange') {\r\n        setSpace(event.data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'navbar') {\r\n        setData({ ...data, showNavbar: message.signal });\r\n      }\r\n      if (message.name === 'loggedin') {\r\n        // props.reloadProfile(nextProps.authorization);\r\n        setData({ ...data, firstLoad: false });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.firstLoad && props.authorization && props.authorization.isAuth) {\r\n      setData({ ...data, firstLoad: false });\r\n    }\r\n  }, [props.authorization.isAuth]);\r\n\r\n  const toggleDarkMode = () => {\r\n    if (props.profile.theme === 'theme_dark') {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_light',\r\n      });\r\n    } else {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_dark',\r\n      });\r\n    }\r\n  };\r\n\r\n  const login = type => {\r\n    if (space) {\r\n      props.history.push(`/space/${space}/login?type=${type}`);\r\n    } else {\r\n      props.history.push(`/login?type=${type}`);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    let baseAuthUrl = '/auth/oa';\r\n    let authKey = props.cookies.get('oneauth');\r\n    if (space) {\r\n      authKey = props.cookies.get(space);\r\n      baseAuthUrl = `/auth/${space}`;\r\n    }\r\n\r\n    httpPost(`${baseAuthUrl}/session/${authKey}/invalidate`, null, null).then(\r\n      (response: any) => {\r\n        if (response.status === 200 || response.status === 404) {\r\n          props.removeAuth();\r\n          if (space) {\r\n            props.cookies.remove(space);\r\n            props.history.push(`/space/${space}/home`);\r\n            sendMessage('notification', true, {\r\n              type: 'success',\r\n              message: `Signed out of space ${space}`,\r\n              duration: 3000,\r\n            });\r\n          } else {\r\n            props.cookies.remove('oneauth');\r\n            props.history.push(`/home`);\r\n            sendMessage('notification', true, {\r\n              type: 'success',\r\n              message: `Signed out of oneauth`,\r\n              duration: 3000,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    setData({ ...data, showSettings: !data.showSettings });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {data.showNavbar && (\r\n        <div className=\"nav\">\r\n          <Desktop\r\n            {...props}\r\n            logout={logout}\r\n            login={login}\r\n            toggleSettings={toggleSettings}\r\n            transparent={data.transparentNavBar}\r\n            toggleDarkMode={toggleDarkMode}\r\n            space={space}\r\n            editProfile={() => setData({ ...data, editProfileDialog: true })}\r\n          />\r\n          <Mobile\r\n            {...props}\r\n            logout={logout}\r\n            login={login}\r\n            toggleSettings={toggleSettings}\r\n            transparent={data.transparentNavBar}\r\n            toggleDarkMode={toggleDarkMode}\r\n            space={space}\r\n          />\r\n          <OakModal\r\n            fullscreen\r\n            label=\"User profile settings\"\r\n            visible={data.editProfileDialog}\r\n            toggleVisibility={() =>\r\n              setData({ ...data, editProfileDialog: !data.editProfileDialog })\r\n            }\r\n          >\r\n            <div className=\"modal-body\">\r\n              <ProfileSettings space={space} />\r\n            </div>\r\n          </OakModal>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(\r\n  withCookies(withRouter(Navigation))\r\n);\r\n","const constants = {\r\n  API_URL_TENANT: '/tenant',\r\n  API_URL_TENANT_BANNER: '/tenant/banner',\r\n  API_URL_TENANT_CREATE: '/tenant/create',\r\n  API_TENANT_URL: '/tenant/sendURL',\r\n\r\n  API_URL_PRESIGNUP: '/auth/keys',\r\n  API_URL_RESET: '/auth/reset',\r\n  API_URL_CODE: '/auth/sendResetCode',\r\n  API_URL_USER_DETAILS: '/user/details',\r\n\r\n  API_URL_STAGE: '/stage',\r\n  API_URL_PREDICT: '/model/predict',\r\n\r\n  API_URL_ARTICLE: '/article',\r\n  API_URL_CATEGORY: '/category',\r\n  API_URL_FAQ: '/faq',\r\n  API_URL_SR: '/servicerequests',\r\n  API_URL_USER: '/user',\r\n  API_URL: '/auth/',\r\n  API_SIGNIN: '/signin',\r\n  API_SIGNUP: '/signup',\r\n  API_KEYS: '/keys',\r\n  API_JWT: '/signin/jwt',\r\n\r\n  API_SPACE_CREATE: '/space/create',\r\n  API_SPACE_FETCH: '/space',\r\n  API_SPACE_DELETE: '/space/delete',\r\n  API_APP_FETCH: '/app',\r\n  API_APP_DELETE: '/app/delete',\r\n  API_ROLE_FETCH: '/role',\r\n  API_PERMITTED_SPACE: '/permittedspace',\r\n  API_HEALTHCHECK_HELLO: '/healthcheck/hello',\r\n};\r\n\r\nexport default constants;\r\n","import {\r\n  httpGet,\r\n  httpPut,\r\n  httpDelete,\r\n  httpPost,\r\n} from '../components/Lib/RestTemplate';\r\nimport constants from '../components/Constants';\r\nimport { UPDATE_SPACE } from './types';\r\nimport { sendMessage } from '../events/MessageService';\r\n\r\nconst domain = 'space';\r\n\r\nexport const fetchSpace = authorization => dispatch => {\r\n  httpGet(`${constants.API_SPACE_FETCH}/`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: UPDATE_SPACE,\r\n      payload: { data: response.data.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport const createSpace = (authorization, payload) => dispatch => {\r\n  return httpPost(`${constants.API_SPACE_FETCH}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'created' });\r\n        dispatch(fetchSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const updateSpace = (authorization, payload) => dispatch => {\r\n  return httpPut(`${constants.API_SPACE_FETCH}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'updated' });\r\n        dispatch(fetchSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteSpace = (authorization, spaceId) => dispatch => {\r\n  httpDelete(`${constants.API_SPACE_DELETE}/${spaceId}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        // sendMessage('notification', true, {type: 'success', message: 'FAQ deleted', duration: 5000});\r\n        sendMessage(domain, true, { action: 'deleted' });\r\n        dispatch(fetchSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n","import {\r\n  httpGet,\r\n  httpPut,\r\n  httpDelete,\r\n  httpPost,\r\n} from '../components/Lib/RestTemplate';\r\nimport constants from '../components/Constants';\r\nimport { UPDATE_APP } from './types';\r\nimport { sendMessage } from '../events/MessageService';\r\n\r\nconst domain = 'app';\r\n\r\nexport const fetchApp = authorization => dispatch => {\r\n  httpGet(`${constants.API_APP_FETCH}/`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: UPDATE_APP,\r\n      payload: { data: response.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport const createApp = (authorization, payload) => dispatch => {\r\n  return httpPost(`${constants.API_APP_FETCH}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'created' });\r\n        dispatch(fetchApp(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const updateApp = (authorization, payload) => dispatch => {\r\n  return httpPut(`${constants.API_APP_FETCH}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'updated' });\r\n        dispatch(fetchApp(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteApp = (authorization, spaceId) => dispatch => {\r\n  httpDelete(`${constants.API_APP_DELETE}/${spaceId}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        // sendMessage('notification', true, {type: 'success', message: 'FAQ deleted', duration: 5000});\r\n        sendMessage(domain, true, { action: 'deleted' });\r\n        dispatch(fetchApp(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n","import { httpGet } from '../components/Lib/RestTemplate';\r\nimport constants from '../components/Constants';\r\nimport { FETCH_ALL_USERS } from './types';\r\n\r\nconst fetchUsers = authorization => dispatch => {\r\n  httpGet(`${constants.API_URL}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: FETCH_ALL_USERS,\r\n      payload: { data: response.data.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport default fetchUsers;\r\n","import { httpGet, httpPut, httpDelete } from '../components/Lib/RestTemplate';\r\nimport constants from '../components/Constants';\r\nimport { UPDATE_ROLE } from './types';\r\nimport { sendMessage } from '../events/MessageService';\r\nimport { fetchSpace } from './SpaceActions';\r\n\r\nconst domain = 'role';\r\n\r\nexport const fetchRoles = authorization => dispatch => {\r\n  httpGet(`${constants.API_ROLE_FETCH}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: UPDATE_ROLE,\r\n      payload: { data: response.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport const updateRoles = (authorization, payload) => dispatch => {\r\n  return httpPut(`${constants.API_ROLE_FETCH}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'updated' });\r\n        dispatch(fetchRoles(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const deleteRoles = (\r\n  authorization,\r\n  type,\r\n  userId,\r\n  domainId\r\n) => dispatch => {\r\n  httpDelete(`${constants.API_ROLE_FETCH}/${type}/${userId}/${domainId}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'deleted' });\r\n        dispatch(fetchRoles(authorization));\r\n        dispatch(fetchSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n","import { httpGet, httpPut, httpDelete } from '../components/Lib/RestTemplate';\r\nimport constants from '../components/Constants';\r\nimport { UPDATE_PERMITTED_SPACE } from './types';\r\nimport { sendMessage } from '../events/MessageService';\r\n\r\nconst domain = 'permittedspace';\r\n\r\nexport const fetchPermittedSpace = authorization => dispatch => {\r\n  httpGet(`${constants.API_PERMITTED_SPACE}/`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: UPDATE_PERMITTED_SPACE,\r\n      payload: { data: response.data.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport const updatePermittedSpace = (authorization, payload) => dispatch => {\r\n  return httpPut(`${constants.API_PERMITTED_SPACE}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'updated' });\r\n        dispatch(fetchPermittedSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n\r\nexport const deletePermittedSpace = (\r\n  authorization,\r\n  spaceId,\r\n  appId\r\n) => dispatch => {\r\n  httpDelete(`${constants.API_PERMITTED_SPACE}/${spaceId}/${appId}`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, { action: 'deleted' });\r\n        dispatch(fetchPermittedSpace(authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { fetchSpace } from '../../actions/SpaceActions';\r\nimport { fetchApp } from '../../actions/AppActions';\r\nimport fetchUsers from '../../actions/OaUserAction';\r\nimport { fetchRoles } from '../../actions/OaRoleActions';\r\nimport { fetchPermittedSpace } from '../../actions/PermittedSpaceAction';\r\nimport './OaLogin.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { sentPasswordChangeEmail } from '../Auth/AuthService';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport SigninPage from './form/SigninPage';\r\nimport NewUser from './form/NewUser';\r\nimport VerifySession from './form/VerifySession';\r\nimport ResetPassword from './form/ResetPassword';\r\nimport ConfirmEmail from './form/ConfirmEmail';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from './form/NotificationMessage';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  fetchRoles: Function;\r\n  fetchUsers: Function;\r\n  fetchSpace: Function;\r\n  fetchApp: Function;\r\n  fetchPermittedSpace: Function;\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n  const loginType = 'oa';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [type, setType] = useState('signin');\r\n  const [authCode, setAuthCode] = useState('');\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const [appId, setAppId] = useState('');\r\n  const [verificationStep, setVerificationStep] = useState(false);\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', false);\r\n\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'login-spinner') {\r\n        setSpinner(message.signal);\r\n        if (message.signal) {\r\n          setNotificationMessage({\r\n            type: '',\r\n            message: '',\r\n          });\r\n        }\r\n      } else if (message.name === 'login-notification') {\r\n        setNotificationMessage(message.data);\r\n        setSpinner(false);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  const changeRoute = routeType => {\r\n    setNotificationMessage({ type: '', message: '' });\r\n    props.history.push(`/login?type=${routeType}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      if (query && query.type) {\r\n        setType(query.type);\r\n      } else {\r\n        setType('signin');\r\n      }\r\n      if (query && query.auth) {\r\n        setAuthCode(query.auth);\r\n      } else {\r\n        setAuthCode('');\r\n      }\r\n      if (query && query.appId) {\r\n        setAppId(query.appId);\r\n      } else {\r\n        setAppId('');\r\n      }\r\n    }\r\n    // props.setProfile({ ...props.profile, tenant: props.match.params.tenant });\r\n  }, [props.location.search]);\r\n\r\n  useEffect(() => {\r\n    setVerificationStep(true);\r\n    const authKey = props.cookies.get('oneauth');\r\n    if (authorization.isAuth || authKey) {\r\n      props.history.push(`/home`);\r\n    } else {\r\n      setVerificationStep(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"oa-login smooth-page\">\r\n        <div className=\"side\" />\r\n        <div className=\"main\">\r\n          <div className=\"container\">\r\n            {props.profile.theme === 'theme_light' && (\r\n              <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n            )}\r\n            {props.profile.theme === 'theme_dark' && (\r\n              <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n            )}\r\n            <div className=\"admin-console-header\">\r\n              <i className=\"material-icons\">settings</i>\r\n              <div>Admin Console</div>\r\n            </div>\r\n            {spinner && <OakSpinner />}\r\n            <NotificationMessage notification={notificationMessage} />\r\n\r\n            {!verificationStep && type === 'signin' && (\r\n              <div className=\"wrapper\">\r\n                <SigninPage\r\n                  switchToSignupPage={() => changeRoute('signup')}\r\n                  switchToResetPage={() => changeRoute('reset')}\r\n                  loginType={loginType}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            )}\r\n            {!verificationStep && type === 'signup' && (\r\n              <div className=\"wrapper\">\r\n                <NewUser\r\n                  switchToSigninPage={() => changeRoute('signin')}\r\n                  loginType={loginType}\r\n                  {...props}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {!verificationStep && type === 'reset' && (\r\n              <div className=\"wrapper\">\r\n                <ResetPassword\r\n                  {...props}\r\n                  authCode={authCode}\r\n                  switchToSigninPage={() => changeRoute('signin')}\r\n                  loginType={loginType}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {!verificationStep && type === 'confirmemail' && (\r\n              <div className=\"wrapper\">\r\n                <ConfirmEmail\r\n                  {...props}\r\n                  authCode={authCode}\r\n                  switchToSigninPage={() => changeRoute('signin')}\r\n                  loginType={loginType}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {verificationStep && <VerifySession />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n  fetchSpace: state.fetchSpace,\r\n  fetchUsers: state.fetchUsers,\r\n  existingAdmins: state.fetchRoles,\r\n  fetchApp: state.fetchApp,\r\n  fetchPermittedSpace: state.fetchPermittedSpace,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAuth,\r\n  addAuth,\r\n  removeAuth,\r\n  fetchSpace,\r\n  fetchUsers,\r\n  fetchRoles,\r\n  fetchApp,\r\n  fetchPermittedSpace,\r\n})(withCookies(Login));\r\n","import React, { useEffect } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { getAuth, addAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport { setProfile } from '../../actions/ProfileActions';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { fetchSpace } from '../../actions/SpaceActions';\r\nimport fetchUsers from '../../actions/OaUserAction';\r\nimport { fetchRoles } from '../../actions/OaRoleActions';\r\nimport { fetchApp } from '../../actions/AppActions';\r\nimport { fetchPermittedSpace } from '../../actions/PermittedSpaceAction';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  path?: string;\r\n  render?: any;\r\n  component: any;\r\n  match: any;\r\n  history: any;\r\n  middleware?: string[];\r\n  cookies: any;\r\n  logout: any;\r\n}\r\n\r\nconst OakRoute = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const profile = useSelector(state => state.profile);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.match.params.space);\r\n  // }, []);\r\n  // useEffect(() => {\r\n  //   console.log(props.profile.appStatus, props.profile.loginPage);\r\n  //   if (props.profile.appStatus === 'notmounted' && !props.profile.loginPage) {\r\n  //     props.setProfile({\r\n  //       space: props.match.params.space,\r\n  //       appStatus: 'mounted',\r\n  //     });\r\n  //   } else {\r\n  //     props.setProfile({ space: props.match.params.space });\r\n  //   }\r\n  //   middlewares(props.middleware);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(props.profile.appStatus, props.profile.loginPage);\r\n  //   // middlewares(props.middleware);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   middlewares(props.middleware);\r\n  // }, [props.profile.appStatus]);\r\n\r\n  const middlewares = () => {\r\n    // if (props.profile.appStatus === 'authenticated') {\r\n    console.log(props.middleware);\r\n    props.middleware?.forEach(middlewareName => {\r\n      if (!runMidleware(middlewareName)) {\r\n        return false;\r\n      }\r\n    });\r\n    return true;\r\n    // }\r\n  };\r\n\r\n  const runMidleware = middlewareName => {\r\n    sendMessage('spaceChange', true, '');\r\n    switch (middlewareName) {\r\n      case 'readAuthenticationSpace':\r\n        return readAuthenticationSpace();\r\n      case 'readAuthenticationAppspace':\r\n        return readAuthenticationAppspace();\r\n      case 'readAuthenticationOa':\r\n        return readAuthenticationOa();\r\n      case 'authenticateSpace':\r\n        return authenticateSpace();\r\n      case 'authenticateAppspace':\r\n        return authenticateAppspace();\r\n      case 'authenticateOa':\r\n        return authenticateOa();\r\n      case 'isAdmin':\r\n        return isAdmin();\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const authenticateOa = () => {\r\n    return authenticate('oa');\r\n  };\r\n  const authenticateSpace = () => {\r\n    return authenticate('space');\r\n  };\r\n  const authenticateAppspace = () => {\r\n    return authenticate('appspace');\r\n  };\r\n  const readAuthenticationOa = () => {\r\n    return authenticate('oa', false);\r\n  };\r\n  const readAuthenticationSpace = () => {\r\n    return authenticate('space', false);\r\n  };\r\n  const readAuthenticationAppspace = () => {\r\n    return authenticate('appspace', false);\r\n  };\r\n\r\n  const authenticate = (type, redirect = true) => {\r\n    if (type === 'space') {\r\n      sendMessage('spaceChange', true, props.match.params.space);\r\n    } else if (type === 'appspace') {\r\n      sendMessage('appspaceChange', true, props.match.params.space);\r\n    }\r\n    if (authorization.isAuth) {\r\n      return true;\r\n    }\r\n    let baseAuthUrl = `/auth/${type}`;\r\n    let authKey = props.cookies.get('oneauth');\r\n    let cookieKey = 'oneauth';\r\n    if (type === 'space') {\r\n      authKey = props.cookies.get(props.match.params.space);\r\n      cookieKey = props.match.params.space;\r\n      baseAuthUrl = `${baseAuthUrl}/${props.match.params.space}`;\r\n    } else if (type === 'appspace') {\r\n      authKey = props.cookies.get(props.match.params.appspace);\r\n      cookieKey = props.match.params.appspace;\r\n      baseAuthUrl = `${baseAuthUrl}/${props.match.params.appspace}`;\r\n    }\r\n\r\n    if (authKey) {\r\n      httpGet(`${baseAuthUrl}/session/${authKey}`, null)\r\n        .then(sessionResponse => {\r\n          if (sessionResponse.status === 200) {\r\n            dispatch(\r\n              addAuth({\r\n                isAuth: true,\r\n                token: sessionResponse.data.token,\r\n                secret: '',\r\n                firstName: sessionResponse.data.firstName,\r\n                lastName: sessionResponse.data.lastName,\r\n                email: sessionResponse.data.email,\r\n                type: sessionResponse.data.type,\r\n                userId: sessionResponse.data.userId,\r\n              })\r\n            );\r\n            if (type === 'oa') {\r\n              dispatch(fetchSpace(sessionResponse.data));\r\n              dispatch(fetchUsers(sessionResponse.data));\r\n              dispatch(fetchRoles(sessionResponse.data));\r\n              dispatch(fetchApp(sessionResponse.data));\r\n              dispatch(fetchPermittedSpace(sessionResponse.data));\r\n            }\r\n            // dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          props.cookies.remove(cookieKey);\r\n          if (redirect && error.response.status === 404) {\r\n            sendMessage('notification', true, {\r\n              type: 'failure',\r\n              message: 'Invalid session token',\r\n              duration: 3000,\r\n            });\r\n            redirectHandler(type);\r\n          } else if (redirect && error.response.status === 401) {\r\n            sendMessage('notification', true, {\r\n              type: 'failure',\r\n              message: 'Session expired',\r\n              duration: 3000,\r\n            });\r\n            redirectHandler(type);\r\n          }\r\n        });\r\n    } else if (redirect) {\r\n      // dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\r\n      redirectHandler(type);\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const redirectHandler = type => {\r\n    switch (type) {\r\n      case 'space':\r\n        redirectToSpaceLogin(props.match.params.space);\r\n        break;\r\n      case 'appspace':\r\n        redirectToAppspaceLogin(props.match.params.appspace);\r\n        break;\r\n      default:\r\n        redirectToOaLogin();\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    redirectToUnauthorized();\r\n    return false;\r\n  };\r\n\r\n  const redirectToOaLogin = () => {\r\n    // window.location.href = `http://localhost:3010/#/login`;\r\n    props.history.push(`/login`);\r\n  };\r\n\r\n  const redirectToSpaceLogin = spaceId => {\r\n    // window.location.href = `http://localhost:3010/#/space/${spaceId}/login`;\r\n    props.history.push(`/space/${spaceId}/login`);\r\n  };\r\n\r\n  const redirectToAppspaceLogin = appspaceId => {\r\n    // window.location.href = `http://localhost:3010/#/appspace/${appspaceId}/login`;\r\n    props.history.push(`/appspace/${appspaceId}/login`);\r\n  };\r\n\r\n  const redirectToUnauthorized = () => {\r\n    props.history.push(`/${profile.space}/unauthorized`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {middlewares() && (\r\n        <props.component\r\n          {...props}\r\n          profile={profile}\r\n          space={props.match.params.space}\r\n          appspace={props.match.params.appspace}\r\n          // getProfile={getProfile}\r\n          // setProfile={props.setProfile}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OakRoute;\r\n","import React from 'react';\r\nimport './styles/oak-prompt.scss';\r\nimport OakButton from './OakButton';\r\nimport OakModal from './OakModal';\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  toggleVisibility: any;\r\n  action: any;\r\n  text?: string;\r\n  children?: any;\r\n}\r\n\r\nconst OakPrompt = (props: Props) => {\r\n  // useEffect(() => {\r\n  //     document.addEventListener(\"keydown\", escFunction, false);\r\n  //     return () => document.removeEventListener(\"keydown\", escFunction, false);\r\n  // }, []);\r\n\r\n  // const escFunction = (event) => {\r\n  //     if(event.keyCode === 27) {\r\n  //       if (props.visible) {\r\n  //         props.toggleVisibility();\r\n  //       }\r\n  //     }\r\n  // }\r\n\r\n  const action = () => {\r\n    console.log('triggered action');\r\n    props.toggleVisibility();\r\n    console.log('before action');\r\n    props.action();\r\n    console.log('after action');\r\n  };\r\n\r\n  return (\r\n    <OakModal\r\n      visible={props.visible}\r\n      toggleVisibility={props.toggleVisibility}\r\n      noheader\r\n    >\r\n      <div className=\"modal-body typography-8 space-top-4 space-bottom-4 confirmation-text\">\r\n        {props.text ? props.text : 'Are you sure you want to continue?'}\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        {props.children && props.children}\r\n        {!props.children && (\r\n          <>\r\n            <OakButton\r\n              data-test=\"action-close\"\r\n              action={props.toggleVisibility}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n              align=\"left\"\r\n              fa=\"fas fa-times\"\r\n            >\r\n              No\r\n            </OakButton>\r\n            <OakButton\r\n              data-test=\"action-proceed\"\r\n              action={action}\r\n              theme=\"primary\"\r\n              variant=\"disappear\"\r\n              align=\"right\"\r\n              fa=\"fas fa-check\"\r\n            >\r\n              Yes\r\n            </OakButton>\r\n          </>\r\n        )}\r\n      </div>\r\n    </OakModal>\r\n  );\r\n};\r\n\r\nexport default OakPrompt;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteRoles } from '../../actions/OaRoleActions';\r\nimport './member.scss';\r\n\r\ninterface Props {\r\n  member: any;\r\n  domainId: string;\r\n  domainType: string;\r\n  owner: string;\r\n}\r\n\r\nconst Member = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [confirmPromptOpen, setConfirmPromptOpen] = useState(false);\r\n\r\n  const remove = () => {\r\n    if (\r\n      props.member.email === props.owner ||\r\n      props.member._id === props.owner\r\n    ) {\r\n      return;\r\n    }\r\n    dispatch(\r\n      deleteRoles(\r\n        authorization,\r\n        props.domainType,\r\n        props.member._id,\r\n        props.domainId\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"member\" id={props.member._id}>\r\n      <>\r\n        <div className=\"title typography-6\">{props.member.email}</div>\r\n        <div className=\"typography-6\">{`${props.member.lastName}, ${props.member.firstName}`}</div>\r\n      </>\r\n      <div className=\"action\">\r\n        {!confirmPromptOpen &&\r\n          props.member.email !== props.owner &&\r\n          props.member._id !== props.owner && (\r\n            <div\r\n              className=\"action-item delete\"\r\n              onClick={() => setConfirmPromptOpen(!confirmPromptOpen)}\r\n            >\r\n              X\r\n            </div>\r\n          )}\r\n        {confirmPromptOpen && (\r\n          <>\r\n            <div\r\n              className=\"action-item cancel\"\r\n              onClick={() => setConfirmPromptOpen(!confirmPromptOpen)}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div className=\"action-item confirm\" onClick={remove}>\r\n              Confirm\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","import React, { ReactNode, useState, useEffect } from 'react';\r\nimport './styles/oak-auto-complete.scss';\r\nimport OakText from './OakText';\r\nimport { newId } from '../events/MessageService';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  placeholder?: string;\r\n  objects: any;\r\n  handleChange: Function;\r\n}\r\n\r\nconst OakAutoComplete = (props: Props) => {\r\n  const [id, setId] = useState(newId());\r\n  const [searchOn, setSearchOn] = useState(false);\r\n  const [criteria, setCriteria] = useState({\r\n    [id]: '',\r\n  });\r\n  const [dropdownFiltered, setDropdownFiltered] = useState<\r\n    [{ key: string; value: string }] | undefined\r\n  >(undefined);\r\n\r\n  useEffect(() => {\r\n    updateSearchResults(criteria[id]);\r\n  }, [props.objects]);\r\n\r\n  const selected = key => {\r\n    setSearchOn(false);\r\n    props.handleChange(key);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setSearchOn(true);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setCriteria({ [event.target.name]: event.target.value });\r\n    updateSearchResults(event.target.value);\r\n  };\r\n  const updateSearchResults = searchCriteria => {\r\n    setDropdownFiltered(\r\n      props.objects.filter(item =>\r\n        item.value?.toLowerCase().includes(searchCriteria.toLowerCase())\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', (e: any) => {\r\n      if (!document.getElementById(id)?.contains(e.target)) {\r\n        setSearchOn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"oak-auto-complete\" id={id}>\r\n      <div className=\"search-bar\">\r\n        <OakText\r\n          id={id}\r\n          data={criteria}\r\n          label={props.label}\r\n          handleFocus={handleFocus}\r\n          handleChange={handleChange}\r\n          placeholder={props.placeholder}\r\n        />\r\n      </div>\r\n      {searchOn && dropdownFiltered && dropdownFiltered.length > 0 && (\r\n        <div className=\"results\">\r\n          {dropdownFiltered?.map(item => (\r\n            <div\r\n              className=\"element\"\r\n              key={item.key}\r\n              onClick={() => selected(item.key)}\r\n            >\r\n              {item.value}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakAutoComplete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Member from '../ManageApp/Member';\r\nimport OakAutoComplete from '../../oakui/OakAutoComplete';\r\nimport { updateRoles, fetchRoles } from '../../actions/OaRoleActions';\r\nimport OakButton from '../../oakui/OakButton';\r\n\r\ninterface Props {\r\n  space: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst EditAdministrators = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const oaUsers = useSelector(state => state.oaUsers);\r\n  const oaRoles = useSelector(state => state.oaRoles);\r\n  const [items, setItems] = useState<undefined | any[]>([{}]);\r\n  const [data, setData] = useState({\r\n    autoCompleteDropdownData: [{}],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRoles(authorization));\r\n  }, [authorization]);\r\n\r\n  useEffect(() => {\r\n    const oaRole = oaRoles.data.data?.filter(\r\n      item => item.domainId === props.space._id\r\n    );\r\n    const oaUser = diff(oaRole, oaUsers.data);\r\n    setItems(oaUser);\r\n  }, [oaRoles.data.data]);\r\n\r\n  const diff = (arr, arr2) => {\r\n    const ret: any[] = [];\r\n    arr2.map(item1 => {\r\n      arr.map(item => {\r\n        if (item1._id.indexOf(item.userId) > -1) {\r\n          ret.push(item1);\r\n        }\r\n      });\r\n    });\r\n    return ret;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let list: any[] = [];\r\n    oaUsers.data?.map(item => {\r\n      list.push({ key: item._id, value: item.email });\r\n    });\r\n\r\n    const adminList: any[] = [];\r\n    if (items) {\r\n      items.map(item => adminList.push({ id: item._id }));\r\n    }\r\n    list = list.filter(val => {\r\n      return !adminList.some(item => {\r\n        return val.key === item.id;\r\n      });\r\n    });\r\n    setData({ autoCompleteDropdownData: list });\r\n  }, [oaUsers.data, items]);\r\n\r\n  const handleAutoCompleteChange = (value: string) => {\r\n    dispatch(\r\n      updateRoles(authorization, {\r\n        type: 'space',\r\n        userId: value,\r\n        domainId: props.space._id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body\">\r\n        <div className=\"autocomplete-users space-bottom-2\">\r\n          <OakAutoComplete\r\n            placeholder=\"Search by user name\"\r\n            handleChange={handleAutoCompleteChange}\r\n            objects={data.autoCompleteDropdownData}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"space-view space-top-2 space-bottom-4\"\r\n          key={oaUsers._id}\r\n        >\r\n          <div className=\"list-view-header typography-5\">\r\n            <div className=\"label\">Email</div>\r\n            <div className=\"label\">Name</div>\r\n          </div>\r\n          {items?.map(item => (\r\n            <Member\r\n              domainType=\"space\"\r\n              domainId={props.space._id}\r\n              member={item}\r\n              owner={props.space.email}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Close\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditAdministrators;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { updateSpace } from '../../actions/SpaceActions';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  space: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst EditSpace = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [spaceData, setSpaceData] = useState({\r\n    days: '',\r\n    hours: '',\r\n    minutes: '',\r\n    name: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setSpaceData(props.space);\r\n  }, [props.space]);\r\n\r\n  // useEffect(() => {\r\n  //   const expiry = convertor(props.space.sessionExpiry);\r\n  //   setView({\r\n  //     ...view,\r\n  //     day: `${expiry.day}`,\r\n  //     hour: `${expiry.hour}`,\r\n  //     minutes: `${expiry.minutes}`,\r\n  //     name: props.space.name,\r\n  //   });\r\n  // }, [props.space.sessionExpiry]);\r\n\r\n  // const convertor = data => {\r\n  //   const day = Math.floor(data / (60 * 24));\r\n  //   const hour = Math.floor((data - day * 1440) / 60);\r\n  //   const minutes = data % 60;\r\n  //   return { day, hour, minutes };\r\n  // };\r\n\r\n  const handleChange = event => {\r\n    setSpaceData({\r\n      ...spaceData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const editSpace = () => {\r\n    if (\r\n      validateEmptyText(spaceData.name, 'Space name cannot be empty') &&\r\n      validateEmptyText(\r\n        spaceData.days || spaceData.hours || spaceData.minutes,\r\n        'Session Expiry is not provided'\r\n      )\r\n    ) {\r\n      dispatch(updateSpace(authorization, spaceData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body\">\r\n        <OakText\r\n          data={spaceData}\r\n          id=\"name\"\r\n          label=\"Space Name\"\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <div className=\"session-expiry\">\r\n          <OakText\r\n            data={spaceData}\r\n            id=\"days\"\r\n            type=\"number\"\r\n            label=\"Expiry in days\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            data={spaceData}\r\n            id=\"hours\"\r\n            type=\"number\"\r\n            label=\"Expiry in hours\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            data={spaceData}\r\n            id=\"minutes\"\r\n            type=\"number\"\r\n            label=\"Expiry in minutes\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton\r\n          theme=\"primary\"\r\n          action={editSpace}\r\n          variant=\"regular\"\r\n          align=\"right\"\r\n        >\r\n          <i className=\"material-icons\">double_arrow</i>Update\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSpace;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OakPopoverMenu from '../../oakui/OakPopoverMenu';\r\nimport './style.scss';\r\nimport OakPrompt from '../../oakui/OakPrompt';\r\nimport { deleteSpace } from '../../actions/SpaceActions';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport EditAdministrators from './EditAdministrators';\r\nimport OakModal from '../../oakui/OakModal';\r\nimport EditSpace from './EditSpace';\r\nimport { fetchRoles } from '../../actions/OaRoleActions';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\nconst spaceDomain = 'space';\r\nconst roleDomain = 'role';\r\n\r\ninterface Props {\r\n  space: any;\r\n  id: string;\r\n}\r\nconst SpaceItem = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const oaRoles = useSelector(state => state.oaRoles);\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [adminDialogOpen, setAdminDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [countOfAdmins, setCountofAdmins] = useState<undefined | number>(0);\r\n  const permittedSpace = useSelector(state => state.permittedSpace);\r\n  const [countOfApps, setCountOfApps] = useState<undefined | number>(0);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === spaceDomain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${spaceDomain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'updated') {\r\n          setEditDialogOpen(false);\r\n        }\r\n        if (message.data.action === 'deleted') {\r\n          setDeleteDialogOpen(false);\r\n        }\r\n      }\r\n      if (message.name === roleDomain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${roleDomain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'updated') {\r\n          // setAdminDialogOpen(false);\r\n          setEditDialogOpen(false);\r\n        }\r\n        if (message.data.action === 'deleted') {\r\n          // setAdminDialogOpen(false);\r\n        }\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRoles(authorization));\r\n  }, [authorization]);\r\n\r\n  useEffect(() => {\r\n    const existingAdmins = oaRoles.data.data?.filter(\r\n      item => item.domainId === props.space._id\r\n    );\r\n\r\n    setCountofAdmins(existingAdmins?.length);\r\n  }, [oaRoles.data.data]);\r\n\r\n  useEffect(() => {\r\n    console.log(permittedSpace);\r\n    console.log(props.space.spaceId);\r\n    const connectedApp = permittedSpace.data?.filter(\r\n      item => item.spaceId === props.space.spaceId\r\n    );\r\n    console.log(connectedApp);\r\n    setCountOfApps(connectedApp.length);\r\n  }, [permittedSpace.data]);\r\n\r\n  const editSpace = () => {\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const editAdmin = () => {\r\n    setAdminDialogOpen(true);\r\n  };\r\n\r\n  const confirmDeleteSpace = () => {\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const actionElements = [\r\n    {\r\n      label: 'Details',\r\n      action: editSpace,\r\n      icon: 'edit',\r\n    },\r\n    {\r\n      label: 'Administrators',\r\n      action: editAdmin,\r\n      icon: 'people_alt',\r\n    },\r\n    {\r\n      label: 'Roles',\r\n      action: editAdmin,\r\n      icon: 'vpn_key',\r\n    },\r\n    {\r\n      label: 'Delete Space',\r\n      action: confirmDeleteSpace,\r\n      icon: 'delete',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"space-item\" key={props.space.id}>\r\n        <div className=\"content\">\r\n          <div className=\"title typography-8\">{`${props.space.name} (${props.space.spaceId})`}</div>\r\n          <div className=\"statistics typography-4\">\r\n            <div className=\"administrators\" onClick={editAdmin}>\r\n              {countOfAdmins} Administrator(s)\r\n            </div>\r\n            <div className=\"connected-apps\">\r\n              {countOfApps && countOfApps !== 0\r\n                ? `${countOfApps} Connected App(s)`\r\n                : `Connected to Open Apps`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"action space-top-0\">\r\n          <OakPopoverMenu elements={actionElements} theme=\"primary\" right>\r\n            <div slot=\"label\" className=\"action-item\">\r\n              <i className=\"material-icons\">more_horiz</i>\r\n            </div>\r\n          </OakPopoverMenu>\r\n        </div>\r\n      </div>\r\n\r\n      <OakModal\r\n        label=\"Edit space\"\r\n        visible={editDialogOpen}\r\n        toggleVisibility={() => setEditDialogOpen(!editDialogOpen)}\r\n      >\r\n        <EditSpace\r\n          space={props.space}\r\n          toggleVisibilityHandler={() => setEditDialogOpen(!editDialogOpen)}\r\n        />\r\n      </OakModal>\r\n      <OakModal\r\n        label=\"Space Administrators\"\r\n        visible={adminDialogOpen}\r\n        toggleVisibility={() => setAdminDialogOpen(!adminDialogOpen)}\r\n      >\r\n        <EditAdministrators\r\n          space={props.space}\r\n          toggleVisibilityHandler={() => setAdminDialogOpen(!adminDialogOpen)}\r\n        />\r\n      </OakModal>\r\n      <OakPrompt\r\n        action={() => dispatch(deleteSpace(authorization, props.space.spaceId))}\r\n        visible={deleteDialogOpen}\r\n        toggleVisibility={() => setDeleteDialogOpen(!deleteDialogOpen)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpaceItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport Navigation from '../Navigation';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { createSpace } from '../../actions/SpaceActions';\r\nimport SpaceItem from './SpaceItem';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakModal from '../../oakui/OakModal';\r\n\r\nconst domain = 'space';\r\n\r\ninterface Props {\r\n  logout: Function;\r\n}\r\nconst ManageSpace = (props: Props) => {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.authorization);\r\n  const space = useSelector(state => state.space);\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n    days: '',\r\n    hours: '',\r\n    minutes: '',\r\n  });\r\n  const [searchCriteria, setSearchCriteria] = useState({ text: '' });\r\n  const [view, setView] = useState<Array<any> | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(auth);\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    setView(search(space.data, searchCriteria.text));\r\n  }, [space.data, searchCriteria]);\r\n\r\n  useEffect(() => {\r\n    if (!dialogOpen) {\r\n      setData({\r\n        ...data,\r\n        name: '',\r\n        password: '',\r\n        repeatPassword: '',\r\n        days: '',\r\n        hours: '',\r\n        minutes: '',\r\n      });\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === domain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${domain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'created') {\r\n          setDialogOpen(false);\r\n        }\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  useEffect(() => {\r\n    setData({ ...data, email: auth.email });\r\n  }, [auth]);\r\n\r\n  const search = (spaceList, criteria) => {\r\n    if (isEmptyOrSpaces(criteria)) {\r\n      return spaceList;\r\n    }\r\n    return spaceList.filter(\r\n      item => item.name.toLowerCase().indexOf(criteria.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addSpace = () => {\r\n    if (\r\n      validateEmptyText(data.name, 'Space name cannot be empty') &&\r\n      (auth.type !== 'oneauth' ||\r\n        validateEmptyText(data.password, 'Password is not provided')) &&\r\n      validateEmptyText(\r\n        data.days || data.hours || data.minutes,\r\n        'Session Expiry is not provided'\r\n      )\r\n    ) {\r\n      if (data.password !== data.repeatPassword) {\r\n        sendMessage('notification', true, {\r\n          type: 'failure',\r\n          message: 'Password does not match',\r\n          duration: 5000,\r\n        });\r\n      } else {\r\n        const payload: any = {\r\n          name: data.name,\r\n          days: data.days,\r\n          hours: data.hours,\r\n          minutes: data.minutes,\r\n          userId: auth.userId,\r\n        };\r\n        if (auth.type === 'oneauth') {\r\n          payload.password = data.password;\r\n        }\r\n        dispatch(createSpace(auth, payload));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSearchCriteriaChange = event => {\r\n    setSearchCriteria({\r\n      ...searchCriteria,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-page manage-space\">\r\n        <div className=\"space-container smooth-page\">\r\n          <div className=\"top-actions\">\r\n            <div className=\"search-bar\">\r\n              <OakText\r\n                label=\"Type to search\"\r\n                handleChange={handleSearchCriteriaChange}\r\n                id=\"text\"\r\n                data={searchCriteria}\r\n              />\r\n            </div>\r\n            <div className=\"create-action\">\r\n              <OakButton\r\n                theme=\"primary\"\r\n                action={() => setDialogOpen(!dialogOpen)}\r\n                variant=\"regular\"\r\n                icon=\"blur_on\"\r\n              >\r\n                New space\r\n              </OakButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"space-list\">\r\n            {view?.map(item => (\r\n              <div key={item._id}>\r\n                <SpaceItem id={item._id} space={item} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <OakModal\r\n        label=\"New space\"\r\n        visible={dialogOpen}\r\n        toggleVisibility={() => setDialogOpen(!dialogOpen)}\r\n      >\r\n        <div className=\"modal-body\">\r\n          <OakText\r\n            data={data}\r\n            id=\"name\"\r\n            label=\"Space name\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          {auth.type === 'oneauth' && (\r\n            <OakText\r\n              data={data}\r\n              id=\"email\"\r\n              label=\"Administrator Email\"\r\n              disabled\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          )}\r\n          {auth.type === 'google' && (\r\n            <OakText\r\n              data={data}\r\n              id=\"email\"\r\n              label=\"Administrator (Google)\"\r\n              disabled\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          )}\r\n          {auth.type === 'facebook' && (\r\n            <OakText\r\n              data={data}\r\n              id=\"email\"\r\n              label=\"Administrator (Facebook)\"\r\n              disabled\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          )}\r\n          {auth.type === 'oneauth' && (\r\n            <>\r\n              <OakText\r\n                data={data}\r\n                id=\"password\"\r\n                label=\"Administrator Password\"\r\n                type=\"password\"\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n              <OakText\r\n                data={data}\r\n                id=\"repeatPassword\"\r\n                label=\"Repeat Password\"\r\n                type=\"password\"\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </>\r\n          )}\r\n          <div className=\"session-expiry\">\r\n            <OakText\r\n              data={data}\r\n              id=\"days\"\r\n              type=\"number\"\r\n              label=\"Expiry in days\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakText\r\n              data={data}\r\n              id=\"hours\"\r\n              type=\"number\"\r\n              label=\"Expiry in hours\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakText\r\n              data={data}\r\n              id=\"minutes\"\r\n              type=\"number\"\r\n              label=\"Expiry in minutes\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <OakButton\r\n            action={() => setDialogOpen(!dialogOpen)}\r\n            theme=\"default\"\r\n            variant=\"appear\"\r\n            align=\"left\"\r\n            icon=\"close\"\r\n          >\r\n            Cancel\r\n          </OakButton>\r\n          <OakButton\r\n            action={addSpace}\r\n            theme=\"primary\"\r\n            variant=\"disappear\"\r\n            align=\"right\"\r\n            icon=\"double_arrow\"\r\n          >\r\n            Create\r\n          </OakButton>\r\n        </div>\r\n      </OakModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageSpace;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OakAutoComplete from '../../oakui/OakAutoComplete';\r\nimport { updateRoles, fetchRoles } from '../../actions/OaRoleActions';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport Member from './Member';\r\n\r\ninterface Props {\r\n  app: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst EditAdministrators = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const oaUsers = useSelector(state => state.oaUsers);\r\n  const oaRoles = useSelector(state => state.oaRoles);\r\n  const [items, setItems] = useState<undefined | any[]>([{}]);\r\n  const [data, setData] = useState({\r\n    autoCompleteDropdownData: [{}],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRoles(authorization));\r\n  }, [authorization]);\r\n\r\n  useEffect(() => {\r\n    const oaRole = oaRoles.data.data?.filter(\r\n      item => item.domainId === props.app._id\r\n    );\r\n    const oaUser = diff(oaRole, oaUsers.data);\r\n    setItems(oaUser);\r\n  }, [oaRoles.data.data]);\r\n\r\n  const diff = (arr, arr2) => {\r\n    const ret: any[] = [];\r\n    arr2.map(item1 => {\r\n      arr.map(item => {\r\n        if (item1._id.indexOf(item.userId) > -1) {\r\n          ret.push(item1);\r\n        }\r\n      });\r\n    });\r\n    return ret;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let list: any[] = [];\r\n    oaUsers.data?.map(item => {\r\n      list.push({ key: item._id, value: item.email });\r\n    });\r\n\r\n    const adminList: any[] = [];\r\n    if (items) {\r\n      items.map(item => adminList.push({ id: item._id }));\r\n    }\r\n    list = list.filter(val => {\r\n      return !adminList.some(item => {\r\n        return val.key === item.id;\r\n      });\r\n    });\r\n    setData({ autoCompleteDropdownData: list });\r\n  }, [oaUsers.data, items]);\r\n\r\n  const handleAutoCompleteChange = (value: string) => {\r\n    dispatch(\r\n      updateRoles(authorization, {\r\n        type: 'app',\r\n        userId: value,\r\n        domainId: props.app._id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body\">\r\n        <div className=\"autocomplete-users space-bottom-2\">\r\n          <OakAutoComplete\r\n            placeholder=\"Search by user name\"\r\n            handleChange={handleAutoCompleteChange}\r\n            objects={data.autoCompleteDropdownData}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"oaapp-view space-top-2 space-bottom-4\"\r\n          key={oaUsers._id}\r\n        >\r\n          <div className=\"list-view-header typography-5\">\r\n            <div className=\"label\">Email</div>\r\n            <div className=\"label\">Name</div>\r\n            <div className=\"label\" />\r\n          </div>\r\n          {items?.map(item => (\r\n            <Member\r\n              member={item}\r\n              domainId={props.app._id}\r\n              domainType=\"app\"\r\n              key={item._id}\r\n              owner={props.app.createdBy}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Close\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditAdministrators;\r\n","import React from 'react';\r\nimport './styles/oak-checkbox.scss';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  id: string;\r\n  data: any;\r\n  handleChange: any;\r\n  labelPosition?: 'left' | 'right';\r\n  variant?: 'circle' | 'square';\r\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\r\n  disabled?: boolean;\r\n}\r\nfunction OakCheckbox(props: Props) {\r\n  function handleChange(event) {\r\n    props.handleChange(event);\r\n  }\r\n\r\n  function getStyle() {\r\n    let style = props.theme ? props.theme : '';\r\n    style += props.variant ? ` ${props.variant}` : '';\r\n    return style;\r\n  }\r\n\r\n  return (\r\n    <div className={`oak-check-box ${getStyle()}`}>\r\n      <div className=\"checkbox-container\">\r\n        {/* {props.label && props.labelPosition === 'left' && <div>\r\n                    {props.label}\r\n                </div>} */}\r\n        {/* <input type=\"checkbox\" name={props.id} value={props.data[props.id]} />\r\n                <span className=\"checkbox-style\"></span> */}\r\n        <label className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name={props.id}\r\n            checked={props.data[props.id]}\r\n            id={props.id}\r\n            onChange={e => handleChange(e)}\r\n            disabled={props.disabled}\r\n          />\r\n          <label className=\"typography-5\" htmlFor={props.id}>\r\n            {props.label}\r\n          </label>\r\n        </label>\r\n        {/* {props.label && (!props.labelPosition || props.labelPosition === 'right') && <div>\r\n                    {props.label}\r\n                </div>} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOakCheckbox.propTypes = {};\r\n\r\nexport default OakCheckbox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { updateApp } from '../../actions/AppActions';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport OakCheckbox from '../../oakui/OakCheckbox';\r\n\r\ninterface Props {\r\n  app: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst EditApp = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [appData, setAppData] = useState({\r\n    name: '',\r\n    redirect: '',\r\n    protected: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setAppData(props.app);\r\n  }, [props.app]);\r\n\r\n  const handleChange = event => {\r\n    setAppData({\r\n      ...appData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeCheckbox = event => {\r\n    setAppData({\r\n      ...appData,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const editSpace = () => {\r\n    if (\r\n      validateEmptyText(appData.name, 'App name cannot be empty') &&\r\n      validateEmptyText(appData.redirect, 'Redirect url cannot be empty')\r\n    ) {\r\n      dispatch(updateApp(authorization, appData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body two-column\">\r\n        <OakText\r\n          data={appData}\r\n          id=\"name\"\r\n          label=\"Application Name\"\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakText\r\n          data={appData}\r\n          id=\"redirect\"\r\n          label=\"Redirect URL\"\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakText\r\n          data={appData}\r\n          id=\"jwtpassword\"\r\n          label=\"JWT Password\"\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakCheckbox\r\n          data={appData}\r\n          theme=\"primary\"\r\n          id=\"protected\"\r\n          label=\"Protected application\"\r\n          handleChange={e => handleChangeCheckbox(e)}\r\n        />\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton\r\n          theme=\"primary\"\r\n          action={editSpace}\r\n          variant=\"regular\"\r\n          align=\"right\"\r\n        >\r\n          <i className=\"material-icons\">double_arrow</i>Update\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditApp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakCheckbox from '../../oakui/OakCheckbox';\r\n\r\ninterface Props {\r\n  app: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst AppDetails = (props: Props) => {\r\n  const [appData, setAppData] = useState({\r\n    _id: '',\r\n    name: '',\r\n    redirect: '',\r\n    jwtpassword: '',\r\n    protected: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setAppData(props.app);\r\n  }, [props.app]);\r\n\r\n  const handleChange = event => {\r\n    setAppData({\r\n      ...appData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeCheckbox = event => {\r\n    setAppData({\r\n      ...appData,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body two-column\">\r\n        <OakText\r\n          data={appData}\r\n          id=\"appId\"\r\n          label=\"Application Id\"\r\n          disabled\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakText\r\n          data={appData}\r\n          id=\"name\"\r\n          label=\"Application name\"\r\n          disabled\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakText\r\n          data={appData}\r\n          id=\"redirect\"\r\n          label=\"Redirect url\"\r\n          disabled\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakText\r\n          data={appData}\r\n          id=\"jwtpassword\"\r\n          label=\"JWT Password\"\r\n          disabled\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n        <OakCheckbox\r\n          data={appData}\r\n          id=\"protected\"\r\n          label=\"Protected application\"\r\n          theme=\"primary\"\r\n          disabled\r\n          handleChange={e => handleChangeCheckbox(e)}\r\n        />\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Close\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppDetails;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './mapspace.scss';\r\nimport { deletePermittedSpace } from '../../actions/PermittedSpaceAction';\r\n\r\ninterface Props {\r\n  appSpaceItem: any;\r\n  appId: string;\r\n}\r\n\r\nconst MapSpaceItem = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [confirmPromptOpen, setConfirmPromptOpen] = useState(false);\r\n\r\n  const remove = () => {\r\n    dispatch(\r\n      deletePermittedSpace(\r\n        authorization,\r\n        props.appSpaceItem.spaceId,\r\n        props.appId\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mapspace\" id={props.appSpaceItem._id}>\r\n      <div className=\"title typography-6\">{props.appSpaceItem.spaceId}</div>\r\n      <div className=\"typography-6\">{props.appSpaceItem.name}</div>\r\n      <div className=\"action\">\r\n        {!confirmPromptOpen && (\r\n          <div\r\n            className=\"action-item delete\"\r\n            onClick={() => setConfirmPromptOpen(!confirmPromptOpen)}\r\n          >\r\n            X\r\n          </div>\r\n        )}\r\n        {confirmPromptOpen && (\r\n          <>\r\n            <div\r\n              className=\"action-item cancel\"\r\n              onClick={() => setConfirmPromptOpen(!confirmPromptOpen)}\r\n            >\r\n              Cancel\r\n            </div>\r\n            <div className=\"action-item confirm\" onClick={remove}>\r\n              Confirm\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapSpaceItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OakAutoComplete from '../../oakui/OakAutoComplete';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { updatePermittedSpace } from '../../actions/PermittedSpaceAction';\r\nimport MapSpaceItem from './MapSpaceItem';\r\n\r\ninterface Props {\r\n  app: any;\r\n  toggleVisibilityHandler: Function;\r\n}\r\n\r\nconst MapSpace = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const oaSpace = useSelector(state => state.space);\r\n  const permittedSpace = useSelector(state => state.permittedSpace);\r\n  const [items, setItems] = useState<undefined | any[]>([{}]);\r\n  const [data, setData] = useState({\r\n    autoCompleteDropdownData: [{}],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const spaceList: any[] = [];\r\n    permittedSpace.data?.filter(item =>\r\n      item.appId === props.app._id ? spaceList.push({ id: item.spaceId }) : ''\r\n    );\r\n\r\n    const existingSpacelist: any[] = [];\r\n    const availableSpaceList: any[] = [];\r\n    oaSpace?.data.filter(val => {\r\n      return spaceList.some(item => {\r\n        return val.spaceId === item.id;\r\n      })\r\n        ? existingSpacelist.push(val)\r\n        : availableSpaceList.push({ key: val.spaceId, value: val.name });\r\n    });\r\n\r\n    setItems(existingSpacelist);\r\n    setData({ autoCompleteDropdownData: availableSpaceList });\r\n  }, [permittedSpace.data, oaSpace.data]);\r\n\r\n  const handleAutoCompleteChange = (value: string) => {\r\n    dispatch(\r\n      updatePermittedSpace(authorization, {\r\n        appId: props.app._id,\r\n        spaceId: value,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal-body\">\r\n        <div className=\"autocomplete-space space-bottom-2\">\r\n          <OakAutoComplete\r\n            placeholder=\"Search by space name\"\r\n            handleChange={handleAutoCompleteChange}\r\n            objects={data.autoCompleteDropdownData}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"oaapp-view space-top-2 space-bottom-4\"\r\n          key={oaSpace._id}\r\n        >\r\n          <div className=\"list-view-header typography-5\">\r\n            <div className=\"label\">Name</div>\r\n            <div className=\"label\">SpaceId</div>\r\n            <div className=\"label\" />\r\n          </div>\r\n          {items?.map(item => (\r\n            <MapSpaceItem\r\n              appSpaceItem={item}\r\n              appId={props.app._id}\r\n              key={item._id}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <OakButton\r\n          action={props.toggleVisibilityHandler}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n          align=\"left\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Close\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapSpace;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OakPopoverMenu from '../../oakui/OakPopoverMenu';\r\nimport './style.scss';\r\nimport OakPrompt from '../../oakui/OakPrompt';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport EditAdministrators from './EditAdministrators';\r\nimport OakModal from '../../oakui/OakModal';\r\nimport EditApp from './EditApp';\r\nimport { fetchRoles } from '../../actions/OaRoleActions';\r\nimport { deleteApp } from '../../actions/AppActions';\r\nimport AppDetails from './AppDetails';\r\nimport MapSpace from './MapSpace';\r\n\r\nconst appDomain = 'app';\r\nconst roleDomain = 'role';\r\n\r\ninterface Props {\r\n  app: any;\r\n}\r\nconst AppItem = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const oaRoles = useSelector(state => state.oaRoles);\r\n  const permittedSpace = useSelector(state => state.permittedSpace);\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [detailsDialogOpen, setDetailsDialogOpen] = useState(false);\r\n  const [adminDialogOpen, setAdminDialogOpen] = useState(false);\r\n  const [spaceMapDialogOpen, setSpaceMapDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [countOfAdmins, setCountofAdmins] = useState<undefined | number>(0);\r\n  const [countOfSpaces, setCountOfSpaces] = useState<undefined | number>(0);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === appDomain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${appDomain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'updated') {\r\n          setEditDialogOpen(false);\r\n        }\r\n        if (message.data.action === 'deleted') {\r\n          setDeleteDialogOpen(false);\r\n        }\r\n      }\r\n      if (message.name === roleDomain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${roleDomain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'updated') {\r\n          setEditDialogOpen(false);\r\n        }\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRoles(authorization));\r\n  }, [authorization]);\r\n\r\n  useEffect(() => {\r\n    const existingAdmins = oaRoles.data.data?.filter(\r\n      item => item.domainId === props.app._id\r\n    );\r\n    setCountofAdmins(existingAdmins?.length);\r\n  }, [oaRoles.data.data]);\r\n\r\n  useEffect(() => {\r\n    const connectedSpace = permittedSpace.data?.filter(\r\n      item => item.appId === props.app._id\r\n    );\r\n    console.log(connectedSpace.length);\r\n    setCountOfSpaces(connectedSpace.length);\r\n  }, [permittedSpace.data]);\r\n\r\n  const editApp = () => {\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const appDetails = () => {\r\n    setDetailsDialogOpen(true);\r\n  };\r\n  const editAdmin = () => {\r\n    setAdminDialogOpen(true);\r\n  };\r\n\r\n  const mapSpace = () => {\r\n    setSpaceMapDialogOpen(true);\r\n  };\r\n\r\n  const confirmDeleteApp = () => {\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const actionElements = props.app.protected\r\n    ? [\r\n        {\r\n          label: 'Permitted Space',\r\n          action: mapSpace,\r\n          icon: 'edit',\r\n        },\r\n        {\r\n          label: 'Details',\r\n          action: editApp,\r\n          icon: 'edit',\r\n        },\r\n        {\r\n          label: 'Administrators',\r\n          action: editAdmin,\r\n          icon: 'people_alt',\r\n        },\r\n        {\r\n          label: 'Roles',\r\n          action: editAdmin,\r\n          icon: 'vpn_key',\r\n        },\r\n        {\r\n          label: 'Delete App',\r\n          action: confirmDeleteApp,\r\n          icon: 'delete',\r\n        },\r\n      ]\r\n    : [\r\n        {\r\n          label: 'Details',\r\n          action: editApp,\r\n          icon: 'edit',\r\n        },\r\n        {\r\n          label: 'Administrators',\r\n          action: editAdmin,\r\n          icon: 'people_alt',\r\n        },\r\n        {\r\n          label: 'Roles',\r\n          action: editAdmin,\r\n          icon: 'vpn_key',\r\n        },\r\n        {\r\n          label: 'Delete App',\r\n          action: confirmDeleteApp,\r\n          icon: 'delete',\r\n        },\r\n      ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"oaapp-item\" key={props.app._id}>\r\n        <div className=\"content\">\r\n          <div\r\n            className=\"title typography-8\"\r\n            onClick={appDetails}\r\n          >{`${props.app.name}`}</div>\r\n          <div className=\"redirect typography-6\">{`${props.app.redirect}`}</div>\r\n          <div className=\"statistics typography-4\">\r\n            <div className=\"administrators\" onClick={editAdmin}>\r\n              {countOfAdmins} Administrators\r\n            </div>\r\n            <div>\r\n              {props.app.protected\r\n                ? `${countOfSpaces} Connected Space(s)`\r\n                : `Open App`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"action space-top-0\">\r\n          <OakPopoverMenu elements={actionElements} theme=\"primary\" right>\r\n            <div slot=\"label\" className=\"action-item\">\r\n              <i className=\"material-icons\">more_horiz</i>\r\n            </div>\r\n          </OakPopoverMenu>\r\n        </div>\r\n\r\n        <OakModal\r\n          label=\"Map Space\"\r\n          visible={spaceMapDialogOpen}\r\n          toggleVisibility={() => setSpaceMapDialogOpen(!spaceMapDialogOpen)}\r\n        >\r\n          <MapSpace\r\n            app={props.app}\r\n            toggleVisibilityHandler={() =>\r\n              setSpaceMapDialogOpen(!spaceMapDialogOpen)\r\n            }\r\n          />\r\n        </OakModal>\r\n\r\n        <OakModal\r\n          label=\"Edit App\"\r\n          visible={editDialogOpen}\r\n          toggleVisibility={() => setEditDialogOpen(!editDialogOpen)}\r\n        >\r\n          <EditApp\r\n            app={props.app}\r\n            toggleVisibilityHandler={() => setEditDialogOpen(!editDialogOpen)}\r\n          />\r\n        </OakModal>\r\n        <OakModal\r\n          label=\"App Details\"\r\n          visible={detailsDialogOpen}\r\n          toggleVisibility={() => setDetailsDialogOpen(!detailsDialogOpen)}\r\n        >\r\n          <AppDetails\r\n            app={props.app}\r\n            toggleVisibilityHandler={() =>\r\n              setDetailsDialogOpen(!detailsDialogOpen)\r\n            }\r\n          />\r\n        </OakModal>\r\n        <OakModal\r\n          label=\"App Administrators\"\r\n          visible={adminDialogOpen}\r\n          toggleVisibility={() => setAdminDialogOpen(!adminDialogOpen)}\r\n        >\r\n          <EditAdministrators\r\n            app={props.app}\r\n            toggleVisibilityHandler={() => setAdminDialogOpen(!adminDialogOpen)}\r\n          />\r\n        </OakModal>\r\n        <OakPrompt\r\n          action={() => dispatch(deleteApp(authorization, props.app.appId))}\r\n          visible={deleteDialogOpen}\r\n          toggleVisibility={() => setDeleteDialogOpen(!deleteDialogOpen)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport Navigation from '../Navigation';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { createApp } from '../../actions/AppActions';\r\nimport AppItem from './AppItem';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakModal from '../../oakui/OakModal';\r\nimport OakCheckbox from '../../oakui/OakCheckbox';\r\n\r\nconst domain = 'app';\r\n\r\ninterface Props {\r\n  logout: Function;\r\n}\r\nconst ManageApp = (props: Props) => {\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.authorization);\r\n  const app = useSelector(state => state.app.data);\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    redirect: '',\r\n    jwtpassword: '',\r\n    protected: false,\r\n  });\r\n  const [searchCriteria, setSearchCriteria] = useState({ text: '' });\r\n  const [view, setView] = useState<Array<any> | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setView(search(app.data, searchCriteria.text));\r\n  }, [app.data, searchCriteria]);\r\n\r\n  useEffect(() => {\r\n    if (!dialogOpen) {\r\n      setData({\r\n        ...data,\r\n        name: '',\r\n        redirect: '',\r\n        jwtpassword: '',\r\n        protected: false,\r\n      });\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === domain && message.signal) {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: `${domain} ${message.data.action}`,\r\n          duration: 5000,\r\n        });\r\n        if (message.data.action === 'created') {\r\n          setDialogOpen(false);\r\n        }\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  const search = (appList, criteria) => {\r\n    if (isEmptyOrSpaces(criteria)) {\r\n      return appList;\r\n    }\r\n    return appList.filter(\r\n      item => item.name.toLowerCase().indexOf(criteria.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addApp = () => {\r\n    if (\r\n      validateEmptyText(data.name, 'App name can not be empty') &&\r\n      validateEmptyText(data.redirect, 'Redirect url is not provided') &&\r\n      validateEmptyText(data.jwtpassword, 'JWT Password can not be empty')\r\n    ) {\r\n      dispatch(\r\n        createApp(auth, {\r\n          name: data.name,\r\n          redirect: data.redirect,\r\n          jwtpassword: data.jwtpassword,\r\n          protected: data.protected,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeCheckbox = event => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleSearchCriteriaChange = event => {\r\n    setSearchCriteria({\r\n      ...searchCriteria,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-page manage-app\">\r\n        <div className=\"oaapp-container smooth-page\">\r\n          <div className=\"top-actions\">\r\n            <div className=\"search-bar\">\r\n              <OakText\r\n                label=\"Type to search\"\r\n                handleChange={handleSearchCriteriaChange}\r\n                id=\"text\"\r\n                data={searchCriteria}\r\n              />\r\n            </div>\r\n            <div className=\"create-action\">\r\n              <OakButton\r\n                theme=\"primary\"\r\n                action={() => setDialogOpen(!dialogOpen)}\r\n                variant=\"regular\"\r\n                icon=\"blur_on\"\r\n              >\r\n                New App\r\n              </OakButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"oaapp-list\">\r\n            {view?.map(item => (\r\n              <AppItem app={item} key={item._id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <OakModal\r\n        label=\"New App\"\r\n        visible={dialogOpen}\r\n        toggleVisibility={() => setDialogOpen(!dialogOpen)}\r\n      >\r\n        <div className=\"modal-body two-column\">\r\n          <OakText\r\n            data={data}\r\n            id=\"name\"\r\n            label=\"Application Name\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            data={data}\r\n            id=\"redirect\"\r\n            label=\"Redirect url\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            data={data}\r\n            id=\"jwtpassword\"\r\n            label=\"JWT Password\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakCheckbox\r\n            key={data.name}\r\n            data={data.protected}\r\n            id=\"protected\"\r\n            label=\"Protected application\"\r\n            theme=\"primary\"\r\n            variant=\"circle\"\r\n            handleChange={e => handleChangeCheckbox(e)}\r\n          />\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <OakButton\r\n            action={() => setDialogOpen(!dialogOpen)}\r\n            theme=\"default\"\r\n            variant=\"appear\"\r\n            align=\"left\"\r\n          >\r\n            <i className=\"material-icons\">close</i>Cancel\r\n          </OakButton>\r\n          <OakButton\r\n            action={addApp}\r\n            theme=\"primary\"\r\n            variant=\"disappear\"\r\n            align=\"right\"\r\n          >\r\n            <i className=\"material-icons\">double_arrow</i>Create\r\n          </OakButton>\r\n        </div>\r\n      </OakModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageApp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  switchToSigninPage: any;\r\n  space: string;\r\n  history: any;\r\n  cookies: any;\r\n  removeAuth: any;\r\n}\r\n\r\nconst HomeLink = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('requestLink');\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'requestLink') {\r\n      // requestLink(event);\r\n    }\r\n  };\r\n\r\n  const changeRoute = routeType => {\r\n    props.history.push(`/space/${props.space}/home?type=${routeType}`);\r\n  };\r\n\r\n  const login = () => {\r\n    props.history.push(`/space/${props.space}/login?type=signin`);\r\n  };\r\n\r\n  const signup = () => {\r\n    props.history.push(`/space/${props.space}/login?type=signup`);\r\n  };\r\n\r\n  const logout = () => {\r\n    let baseAuthUrl = '/auth/oa';\r\n    let authKey = props.cookies.get('oneauth');\r\n    if (props.space) {\r\n      authKey = props.cookies.get(props.space);\r\n      baseAuthUrl = `/auth/space/${props.space}`;\r\n    }\r\n\r\n    httpPost(`${baseAuthUrl}/session/${authKey}/invalidate`, null, null).then(\r\n      (response: any) => {\r\n        if (response.status === 200 || response.status === 404) {\r\n          props.removeAuth();\r\n          props.cookies.remove(props.space);\r\n          props.history.push(`/space/${props.space}/home`);\r\n          sendMessage('notification', true, {\r\n            type: 'success',\r\n            message: `Signed out of space ${props.space}`,\r\n            duration: 3000,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-home-link\"\r\n      >\r\n        <div className=\"action\">\r\n          <div className=\"action-group\">\r\n            {authorization.isAuth && (\r\n              <>\r\n                <OakButton\r\n                  variant=\"drama\"\r\n                  theme=\"primary\"\r\n                  action={() => changeRoute('updateProfile')}\r\n                >\r\n                  Edit Profile\r\n                </OakButton>\r\n                <OakButton\r\n                  variant=\"drama\"\r\n                  theme=\"primary\"\r\n                  action={() => changeRoute('changePassword')}\r\n                >\r\n                  Change Password\r\n                </OakButton>\r\n                <OakButton variant=\"appear\" theme=\"tertiary\" action={logout}>\r\n                  Sign out\r\n                </OakButton>\r\n              </>\r\n            )}\r\n            {!authorization.isAuth && (\r\n              <>\r\n                <OakButton variant=\"appear\" theme=\"primary\" action={login}>\r\n                  Sign in\r\n                </OakButton>\r\n                <OakButton variant=\"appear\" theme=\"primary\" action={signup}>\r\n                  Sign up\r\n                </OakButton>\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* {['requestLink'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.switchToSigninPage}>\r\n              Log In\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeLink;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  goHome: any;\r\n  space: string;\r\n  history: any;\r\n}\r\n\r\nconst ChangePassword = (props: Props) => {\r\n  const loginType = 'appspace';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    oldpassword: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('form');\r\n\r\n  const [errors, setErrors] = useState({\r\n    oldpassword: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const changePassword = event => {\r\n    event.preventDefault();\r\n    const baseAuthUrl = `/auth/${loginType}/${props.space}`;\r\n    const errorState = {\r\n      oldpassword: '',\r\n      password: '',\r\n      repeatpassword: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.oldpassword)) {\r\n      error = true;\r\n      errorState.oldpassword = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      error = true;\r\n      errorState.password = 'Cannot be empty';\r\n    }\r\n    if (data.password !== data.repeatpassword) {\r\n      error = true;\r\n      errorState.repeatpassword = 'Password does not match';\r\n    }\r\n    if (!error) {\r\n      console.log('save');\r\n      httpPost(\r\n        `${baseAuthUrl}/changepassword`,\r\n        {\r\n          userId: authorization.userId,\r\n          oldPassword: data.oldpassword,\r\n          newPassword: data.password,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: authorization.token,\r\n          },\r\n        }\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setData({\r\n              oldpassword: '',\r\n              password: '',\r\n              repeatpassword: '',\r\n            });\r\n            setStage('passwordUpdated');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Your account password has been updated. You can login with your new password from next time',\r\n            });\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 401) {\r\n            errorState.oldpassword = 'Incorrect password';\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      console.log('error');\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'form') {\r\n      // requestLink(event);\r\n      changePassword(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-change-password-link\"\r\n      >\r\n        {stage === 'form' && <></>}\r\n        {stage === 'form' && (\r\n          <div className=\"form-changepassword\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.oldpassword && (\r\n                  <div className=\"label-text\">Current password</div>\r\n                )}\r\n                {errors.oldpassword && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.oldpassword}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"oldpassword\"\r\n                type=\"password\"\r\n                placeholder=\"Type your current password\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.password && (\r\n                  <div className=\"label-text\">New password</div>\r\n                )}\r\n                {errors.password && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.password}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Make it a good one\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.repeatpassword && (\r\n                  <div className=\"label-text\">Repeat password</div>\r\n                )}\r\n                {errors.repeatpassword && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.repeatpassword}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"repeatpassword\"\r\n                type=\"password\"\r\n                placeholder=\"Don't forget it\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {['form'].includes(stage) && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={handleSubmit}>\r\n              Change Password\r\n            </OakButton>\r\n          )}\r\n          {['form'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.goHome}>\r\n              Back to Home\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  goHome: any;\r\n  space: string;\r\n  history: any;\r\n}\r\n\r\nconst UpdateProfile = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('form');\r\n\r\n  const [errors, setErrors] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(authorization);\r\n    setData({\r\n      firstName: authorization.firstName,\r\n      lastName: authorization.lastName,\r\n    });\r\n  }, [authorization]);\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const updateProfile = event => {\r\n    event.preventDefault();\r\n    const baseUserUrl = `/user/${props.space}`;\r\n    const errorState = {\r\n      firstName: '',\r\n      lastName: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.firstName)) {\r\n      error = true;\r\n      errorState.firstName = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.lastName)) {\r\n      error = true;\r\n      errorState.lastName = 'Cannot be empty';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseUserUrl}/updateprofile`,\r\n        {\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: authorization.token,\r\n          },\r\n        }\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setData({\r\n              firstName: '',\r\n              lastName: '',\r\n            });\r\n            setStage('profileUpdated');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Your account password has been updated. You can login with your new password from next time',\r\n            });\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          sendMessage('login-notification', true, {\r\n            type: 'failure',\r\n            message: 'Failed to update your profile',\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      console.log('error');\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'form') {\r\n      // requestLink(event);\r\n      updateProfile(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-change-password-link\"\r\n      >\r\n        {stage === 'form' && <></>}\r\n        {stage === 'form' && (\r\n          <div className=\"form-changepassword\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.firstName && (\r\n                  <div className=\"label-text\">First name</div>\r\n                )}\r\n                {errors.firstName && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.firstName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"firstName\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.lastName && (\r\n                  <div className=\"label-text\">Last name</div>\r\n                )}\r\n                {errors.lastName && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.lastName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"lastName\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {['form'].includes(stage) && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={handleSubmit}>\r\n              Save\r\n            </OakButton>\r\n          )}\r\n          {['form'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.goHome}>\r\n              Back to Home\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from '../Login/form/NotificationMessage';\r\nimport HomeLink from './HomeLink';\r\nimport ChangePassword from './ChangePassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  space: string;\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [type, setType] = useState('home');\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', false);\r\n\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'login-spinner') {\r\n        setSpinner(message.signal);\r\n        if (message.signal) {\r\n          setNotificationMessage({\r\n            type: '',\r\n            message: '',\r\n          });\r\n        }\r\n      } else if (message.name === 'login-notification') {\r\n        setNotificationMessage(message.data);\r\n        setSpinner(false);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  const changeRoute = routeType => {\r\n    setNotificationMessage({ type: '', message: '' });\r\n    props.history.push(`/space/${props.space}/home?type=${routeType}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      if (query && query.type) {\r\n        setType(query.type);\r\n      } else {\r\n        setType('home');\r\n      }\r\n    } else {\r\n      setType('home');\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <div className=\"space-home\">\r\n      <div className=\"overlay\">\r\n        <div className=\"container smooth-page\">\r\n          {props.profile.theme === 'theme_light' && (\r\n            <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n          )}\r\n          {props.profile.theme === 'theme_dark' && (\r\n            <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n          )}\r\n\r\n          {spinner && <OakSpinner />}\r\n          <NotificationMessage notification={notificationMessage} />\r\n\r\n          {type === 'home' && (\r\n            <div className=\"wrapper\">\r\n              <HomeLink\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                {...props}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {type === 'changePassword' && (\r\n            <div className=\"wrapper\">\r\n              <ChangePassword goHome={() => changeRoute('home')} {...props} />\r\n            </div>\r\n          )}\r\n\r\n          {type === 'updateProfile' && (\r\n            <div className=\"wrapper\">\r\n              <UpdateProfile goHome={() => changeRoute('home')} {...props} />\r\n            </div>\r\n          )}\r\n\r\n          {/* {!verificationStep && type === 'signup' && (\r\n            <div className=\"wrapper\">\r\n              <NewUser\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                isSpaceLogin\r\n                {...props}\r\n              />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* {!verificationStep && type === 'reset' && (\r\n            <div className=\"wrapper\">\r\n              <ResetPassword\r\n                isSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* {!verificationStep && type === 'confirmemail' && (\r\n            <div className=\"wrapper\">\r\n              <ConfirmEmail\r\n                isSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(Login)\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport Navigation from '../../Navigation';\r\nimport { sendMessage } from '../../../events/MessageService';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  logout: Function;\r\n}\r\nconst TestPage = (props: Props) => {\r\n  useEffect(() => {\r\n    sendMessage('navbar', true);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <div className=\"app-container\">\r\n        <div className=\"home\">\r\n          <div className=\"typography-10 space-bottom-2\">Test page</div>\r\n          <div className=\"typography-5\">\r\n            Test page content here for the space\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './AppspaceLogin.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport NewUser from './form/NewUser';\r\nimport SigninPage from './form/SigninPage';\r\nimport VerifySession from './form/VerifySession';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport ResetPassword from './form/ResetPassword';\r\nimport ConfirmEmail from './form/ConfirmEmail';\r\nimport NotificationMessage from './form/NotificationMessage';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  appspace: string;\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n  const loginType = 'appspace';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [type, setType] = useState('signin');\r\n  const [authCode, setAuthCode] = useState('');\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  const [appId, setAppId] = useState('');\r\n  const [queryParam, setQueryParam] = useState<any>();\r\n  const [verificationStep, setVerificationStep] = useState(false);\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', false);\r\n\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'login-spinner') {\r\n        setSpinner(message.signal);\r\n        if (message.signal) {\r\n          setNotificationMessage({\r\n            type: '',\r\n            message: '',\r\n          });\r\n        }\r\n      } else if (message.name === 'login-notification') {\r\n        setNotificationMessage(message.data);\r\n        setSpinner(false);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  const changeRoute = routeType => {\r\n    setNotificationMessage({ type: '', message: '' });\r\n    props.history.push(`/appspace/${props.appspace}/login?type=${routeType}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setVerificationStep(true);\r\n    let appIdRef = null;\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      setQueryParam({ ...query });\r\n      console.log(query);\r\n      if (query && query.type) {\r\n        setType(query.type);\r\n      } else {\r\n        setType('signin');\r\n      }\r\n      if (query && query.auth) {\r\n        setAuthCode(query.auth);\r\n      } else {\r\n        setAuthCode('');\r\n      }\r\n      if (query && query.appId) {\r\n        setAppId(query.appId);\r\n        appIdRef = query.appId;\r\n      } else {\r\n        setAppId('');\r\n      }\r\n    }\r\n    const authKey = props.cookies.get(props.appspace);\r\n    if (authorization.isAuth || authKey) {\r\n      if (appIdRef) {\r\n        redirectToRequestedAppIfTokenIsValid(\r\n          appIdRef,\r\n          authKey,\r\n          queryString.parse(props.location.search)\r\n        );\r\n      } else {\r\n        props.history.push(`/appspace/${props.appspace}/home`);\r\n      }\r\n    } else {\r\n      setVerificationStep(false);\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  const redirectToRequestedAppIfTokenIsValid = (\r\n    appIdRef,\r\n    authKey,\r\n    queryString\r\n  ) => {\r\n    console.log(appIdRef, authKey);\r\n    const baseAuthUrl = `/auth/appspace/${props.appspace}`;\r\n\r\n    httpGet(`${baseAuthUrl}/session/${authKey}`, null)\r\n      .then(sessionResponse => {\r\n        if (sessionResponse.status === 200) {\r\n          redirectToRequestedApp(\r\n            appIdRef,\r\n            authKey,\r\n            sessionResponse.data.token,\r\n            queryString\r\n          );\r\n        } else {\r\n          props.cookies.remove(props.appspace);\r\n\r\n          setVerificationStep(false);\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        props.cookies.remove(props.appspace);\r\n        setVerificationStep(false);\r\n      });\r\n  };\r\n\r\n  const redirectToRequestedApp = (appId, authKey, token, queryString) => {\r\n    httpGet(`/app/${appId}`, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    }).then(appResponse => {\r\n      let appendString = '';\r\n      Object.keys(queryString).forEach(key => {\r\n        if (!['appId', 'type'].includes(key)) {\r\n          appendString += `&${key}=${queryString[key]}`;\r\n        }\r\n      });\r\n      window.location.href = `${appResponse.data.data.redirect}?authKey=${authKey}&appspace=${props.appspace}${appendString}`;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"appspace-login\">\r\n      <div className=\"overlay\">\r\n        <div className=\"container smooth-page\">\r\n          {props.profile.theme === 'theme_light' && (\r\n            <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n          )}\r\n          {props.profile.theme === 'theme_dark' && (\r\n            <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n          )}\r\n\r\n          {spinner && <OakSpinner />}\r\n          <NotificationMessage notification={notificationMessage} />\r\n\r\n          {!verificationStep && type === 'signin' && (\r\n            <div className=\"wrapper\">\r\n              <SigninPage\r\n                appId={appId}\r\n                switchToSignupPage={() => changeRoute('signup')}\r\n                switchToResetPage={() => changeRoute('reset')}\r\n                isAppSpaceLogin\r\n                queryParam={queryParam}\r\n                {...props}\r\n                loginType={loginType}\r\n                space={props.appspace}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'signup' && (\r\n            <div className=\"wrapper\">\r\n              <NewUser\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                isAppSpaceLogin\r\n                {...props}\r\n                loginType={loginType}\r\n                space={props.appspace}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'reset' && (\r\n            <div className=\"wrapper\">\r\n              <ResetPassword\r\n                isAppSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                loginType={loginType}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                space={props.appspace}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!verificationStep && type === 'confirmemail' && (\r\n            <div className=\"wrapper\">\r\n              <ConfirmEmail\r\n                isAppSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                loginType={loginType}\r\n                space={props.appspace}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {verificationStep && <VerifySession />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(Login)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  switchToSigninPage: any;\r\n  appspace: string;\r\n  history: any;\r\n  cookies: any;\r\n  removeAuth: any;\r\n}\r\n\r\nconst HomeLink = (props: Props) => {\r\n  const loginType = 'appspace';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('requestLink');\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'requestLink') {\r\n      // requestLink(event);\r\n    }\r\n  };\r\n\r\n  const changeRoute = routeType => {\r\n    props.history.push(`/appspace/${props.appspace}/home?type=${routeType}`);\r\n  };\r\n\r\n  const login = () => {\r\n    props.history.push(`/appspace/${props.appspace}/login?type=signin`);\r\n  };\r\n\r\n  const signup = () => {\r\n    props.history.push(`/appspace/${props.appspace}/login?type=signup`);\r\n  };\r\n\r\n  const logout = () => {\r\n    let baseAuthUrl = `/auth/${loginType}`;\r\n    let authKey = props.cookies.get('oneauth');\r\n    if (props.appspace) {\r\n      authKey = props.cookies.get(props.appspace);\r\n      baseAuthUrl = `${baseAuthUrl}/${props.appspace}`;\r\n    }\r\n\r\n    httpPost(`${baseAuthUrl}/session/${authKey}/invalidate`, null, null).then(\r\n      (response: any) => {\r\n        if (response.status === 200 || response.status === 404) {\r\n          props.removeAuth();\r\n          props.cookies.remove(props.appspace);\r\n          props.history.push(`/appspace/${props.appspace}/home`);\r\n          sendMessage('notification', true, {\r\n            type: 'success',\r\n            message: `Signed out of space ${props.appspace}`,\r\n            duration: 3000,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-home-link\"\r\n      >\r\n        <div className=\"action\">\r\n          <div className=\"action-group\">\r\n            {authorization.isAuth && (\r\n              <>\r\n                <OakButton\r\n                  variant=\"drama\"\r\n                  theme=\"primary\"\r\n                  action={() => changeRoute('updateProfile')}\r\n                >\r\n                  Edit Profile\r\n                </OakButton>\r\n                <OakButton\r\n                  variant=\"drama\"\r\n                  theme=\"primary\"\r\n                  action={() => changeRoute('changePassword')}\r\n                >\r\n                  Change Password\r\n                </OakButton>\r\n                <OakButton variant=\"appear\" theme=\"tertiary\" action={logout}>\r\n                  Sign out\r\n                </OakButton>\r\n              </>\r\n            )}\r\n            {!authorization.isAuth && (\r\n              <>\r\n                <OakButton variant=\"appear\" theme=\"primary\" action={login}>\r\n                  Sign in\r\n                </OakButton>\r\n                <OakButton variant=\"appear\" theme=\"primary\" action={signup}>\r\n                  Sign up\r\n                </OakButton>\r\n              </>\r\n            )}\r\n          </div>\r\n          {/* {['requestLink'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.switchToSigninPage}>\r\n              Log In\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeLink;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  goHome: any;\r\n  appspace: string;\r\n  history: any;\r\n}\r\n\r\nconst ChangePassword = (props: Props) => {\r\n  const loginType = 'appspace';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    oldpassword: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('form');\r\n\r\n  const [errors, setErrors] = useState({\r\n    oldpassword: '',\r\n    password: '',\r\n    repeatpassword: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const changePassword = event => {\r\n    event.preventDefault();\r\n    const baseAuthUrl = `/auth/${loginType}/${props.appspace}`;\r\n    const errorState = {\r\n      oldpassword: '',\r\n      password: '',\r\n      repeatpassword: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.oldpassword)) {\r\n      error = true;\r\n      errorState.oldpassword = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      error = true;\r\n      errorState.password = 'Cannot be empty';\r\n    }\r\n    if (data.password !== data.repeatpassword) {\r\n      error = true;\r\n      errorState.repeatpassword = 'Password does not match';\r\n    }\r\n    if (!error) {\r\n      console.log('save');\r\n      httpPost(\r\n        `${baseAuthUrl}/changepassword`,\r\n        {\r\n          userId: authorization.userId,\r\n          oldPassword: data.oldpassword,\r\n          newPassword: data.password,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: authorization.token,\r\n          },\r\n        }\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setData({\r\n              oldpassword: '',\r\n              password: '',\r\n              repeatpassword: '',\r\n            });\r\n            setStage('passwordUpdated');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Your account password has been updated. You can login with your new password from next time',\r\n            });\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 401) {\r\n            errorState.oldpassword = 'Incorrect password';\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      console.log('error');\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'form') {\r\n      // requestLink(event);\r\n      changePassword(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-change-password-link\"\r\n      >\r\n        {stage === 'form' && <></>}\r\n        {stage === 'form' && (\r\n          <div className=\"form-changepassword\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.oldpassword && (\r\n                  <div className=\"label-text\">Current password</div>\r\n                )}\r\n                {errors.oldpassword && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.oldpassword}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"oldpassword\"\r\n                type=\"password\"\r\n                placeholder=\"Type your current password\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.password && (\r\n                  <div className=\"label-text\">New password</div>\r\n                )}\r\n                {errors.password && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.password}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Make it a good one\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.repeatpassword && (\r\n                  <div className=\"label-text\">Repeat password</div>\r\n                )}\r\n                {errors.repeatpassword && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.repeatpassword}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"repeatpassword\"\r\n                type=\"password\"\r\n                placeholder=\"Don't forget it\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {['form'].includes(stage) && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={handleSubmit}>\r\n              Change Password\r\n            </OakButton>\r\n          )}\r\n          {['form'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.goHome}>\r\n              Back to Home\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { httpPost } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakTextPlain from '../../oakui/OakTextPlain';\r\nimport OakIcon from '../../oakui/OakIcon';\r\n\r\ninterface Props {\r\n  goHome: any;\r\n  appspace: string;\r\n  history: any;\r\n}\r\n\r\nconst UpdateProfile = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const [stage, setStage] = useState('form');\r\n\r\n  const [errors, setErrors] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(authorization);\r\n    setData({\r\n      firstName: authorization.firstName,\r\n      lastName: authorization.lastName,\r\n    });\r\n  }, [authorization]);\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const updateProfile = event => {\r\n    event.preventDefault();\r\n    const baseUserUrl = `/user/${props.appspace}`;\r\n    const errorState = {\r\n      firstName: '',\r\n      lastName: '',\r\n    };\r\n    let error = false;\r\n    sendMessage('notification', false);\r\n    sendMessage('login-spinner');\r\n    if (isEmptyOrSpaces(data.firstName)) {\r\n      error = true;\r\n      errorState.firstName = 'Cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(data.lastName)) {\r\n      error = true;\r\n      errorState.lastName = 'Cannot be empty';\r\n    }\r\n    if (!error) {\r\n      httpPost(\r\n        `${baseUserUrl}/updateprofile`,\r\n        {\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: authorization.token,\r\n          },\r\n        }\r\n      )\r\n        .then((response: any) => {\r\n          if (response.status === 200) {\r\n            setData({\r\n              firstName: '',\r\n              lastName: '',\r\n            });\r\n            setStage('profileUpdated');\r\n            sendMessage('login-notification', true, {\r\n              type: 'success-main',\r\n              message:\r\n                'Your account password has been updated. You can login with your new password from next time',\r\n            });\r\n          } else {\r\n            sendMessage('login-notification', true, {\r\n              type: 'failure',\r\n              message: 'Failed to update your password',\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          sendMessage('login-notification', true, {\r\n            type: 'failure',\r\n            message: 'Failed to update your profile',\r\n          });\r\n        })\r\n        .finally(() => {\r\n          setErrors(errorState);\r\n          sendMessage('login-spinner', false);\r\n        });\r\n    } else {\r\n      console.log('error');\r\n      setErrors(errorState);\r\n      sendMessage('login-spinner', false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    if (stage === 'form') {\r\n      // requestLink(event);\r\n      updateProfile(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        method=\"GET\"\r\n        onSubmit={handleSubmit}\r\n        noValidate\r\n        className=\"space-change-password-link\"\r\n      >\r\n        {stage === 'form' && <></>}\r\n        {stage === 'form' && (\r\n          <div className=\"form-changepassword\">\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.firstName && (\r\n                  <div className=\"label-text\">First name</div>\r\n                )}\r\n                {errors.firstName && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.firstName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"firstName\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"label\">\r\n                {!errors.lastName && (\r\n                  <div className=\"label-text\">Last name</div>\r\n                )}\r\n                {errors.lastName && (\r\n                  <div className=\"error-text\">\r\n                    <OakIcon mat=\"warning\" color=\"warning\" size=\"20px\" />\r\n                    {errors.lastName}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <OakTextPlain\r\n                id=\"lastName\"\r\n                data={data}\r\n                handleChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"action\">\r\n          {['form'].includes(stage) && (\r\n            <OakButton variant=\"regular\" theme=\"primary\" action={handleSubmit}>\r\n              Save\r\n            </OakButton>\r\n          )}\r\n          {['form'].includes(stage) && <p className=\"hr\">or</p>}\r\n          <div className=\"button-link\">\r\n            <div className=\"link\" onClick={props.goHome}>\r\n              Back to Home\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport './style.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from '../Login/form/NotificationMessage';\r\nimport HomeLink from './HomeLink';\r\nimport ChangePassword from './ChangePassword';\r\nimport UpdateProfile from './UpdateProfile';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  authorization: Authorization;\r\n  appspace: string;\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n  const loginType = 'appspace';\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [type, setType] = useState('home');\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    type: '',\r\n    message: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    sendMessage('navbar', false);\r\n\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'login-spinner') {\r\n        setSpinner(message.signal);\r\n        if (message.signal) {\r\n          setNotificationMessage({\r\n            type: '',\r\n            message: '',\r\n          });\r\n        }\r\n      } else if (message.name === 'login-notification') {\r\n        setNotificationMessage(message.data);\r\n        setSpinner(false);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  const changeRoute = routeType => {\r\n    setNotificationMessage({ type: '', message: '' });\r\n    props.history.push(\r\n      `/${loginType}/${props.appspace}/home?type=${routeType}`\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      if (query && query.type) {\r\n        setType(query.type);\r\n      } else {\r\n        setType('home');\r\n      }\r\n    } else {\r\n      setType('home');\r\n    }\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <div className=\"appspace-home\">\r\n      <div className=\"overlay\">\r\n        <div className=\"container smooth-page\">\r\n          {props.profile.theme === 'theme_light' && (\r\n            <img className=\"logo\" src={oneauthBlack} alt=\"Oneauth logo\" />\r\n          )}\r\n          {props.profile.theme === 'theme_dark' && (\r\n            <img className=\"logo\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n          )}\r\n\r\n          {spinner && <OakSpinner />}\r\n          <NotificationMessage notification={notificationMessage} />\r\n\r\n          {type === 'home' && (\r\n            <div className=\"wrapper\">\r\n              <HomeLink\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                {...props}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {type === 'changePassword' && (\r\n            <div className=\"wrapper\">\r\n              <ChangePassword goHome={() => changeRoute('home')} {...props} />\r\n            </div>\r\n          )}\r\n\r\n          {type === 'updateProfile' && (\r\n            <div className=\"wrapper\">\r\n              <UpdateProfile goHome={() => changeRoute('home')} {...props} />\r\n            </div>\r\n          )}\r\n\r\n          {/* {!verificationStep && type === 'signup' && (\r\n            <div className=\"wrapper\">\r\n              <NewUser\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n                isSpaceLogin\r\n                {...props}\r\n              />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* {!verificationStep && type === 'reset' && (\r\n            <div className=\"wrapper\">\r\n              <ResetPassword\r\n                isSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )} */}\r\n\r\n          {/* {!verificationStep && type === 'confirmemail' && (\r\n            <div className=\"wrapper\">\r\n              <ConfirmEmail\r\n                isSpaceLogin\r\n                {...props}\r\n                authCode={authCode}\r\n                switchToSigninPage={() => changeRoute('signin')}\r\n              />\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  withCookies(Login)\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Home from '../Home';\r\nimport SpaceLogin from '../Login/SpaceLogin';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport OaLogin from '../Login/OaLogin';\r\nimport OakRoute from '../Auth/OakRoute';\r\nimport ManageSpace from '../ManageSpace';\r\nimport ManageApp from '../ManageApp';\r\nimport SpaceHome from '../SpaceHome';\r\nimport TestPage from '../SpacePages/TestPage';\r\nimport AppspaceLogin from '../Login/AppspaceLogin';\r\nimport AppspaceHome from '../AppspaceHome';\r\n\r\nconst themes = {\r\n  themecolor1: getTheme('#69A7BF'),\r\n  themecolor2: getTheme('#99587B'),\r\n  themecolor3: getTheme('#A66C26'),\r\n  themecolor4: getTheme('#37AE82'),\r\n};\r\n\r\nfunction getTheme(color: string) {\r\n  return createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: color,\r\n      },\r\n      secondary: {\r\n        main: color,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\ninterface Props {\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n\r\n  // event: PropTypes.object,\r\n  profile: any;\r\n  authorization: Authorization;\r\n}\r\n\r\nconst Content = (props: Props) => {\r\n  useEffect(() => {\r\n    props.getProfile();\r\n    props.getAuth();\r\n    props.getAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'session expired') {\r\n        logout(null, 'failure', 'Session expired. Login again');\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  const logout = (\r\n    event: any,\r\n    type = 'success',\r\n    message = 'You have been logged out'\r\n  ) => {\r\n    props.removeAuth();\r\n    props.cookies.remove('oneauth');\r\n    sendMessage('notification', true, {\r\n      type,\r\n      message,\r\n      duration: 3000,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`App ${props.profile.theme} ${props.profile.textSize} ${props.profile.themeColor}`}\r\n    >\r\n      <HashRouter>\r\n        <div className=\"body\">\r\n          <div className=\"body-content\">\r\n            <Notification />\r\n            <MuiThemeProvider theme={themes.themecolor1}>\r\n              <Navigation {...props} logout={logout} />\r\n              <Route\r\n                exact\r\n                path=\"/home\"\r\n                render={propsLocal => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={Home}\r\n                    middleware={['readAuthenticationOa']}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={propsLocal => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={Home}\r\n                    middleware={['readAuthenticationOa']}\r\n                  />\r\n                )}\r\n              />\r\n              {/* Space based routes */}\r\n              <Route\r\n                path=\"/space/:space/login\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={SpaceLogin}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/space/:space/home\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={SpaceHome}\r\n                    middleware={['readAuthenticationSpace']}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/space/:space\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={SpaceHome}\r\n                    middleware={['readAuthenticationSpace']}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/space/:space/test\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={TestPage}\r\n                    middleware={['authenticateSpace']}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              {/* Appspace based routes */}\r\n              <Route\r\n                path=\"/appspace/:appspace/login\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={AppspaceLogin}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appspace/:appspace/home\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={AppspaceHome}\r\n                    middleware={['readAuthenticationAppspace']}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/appspace/:appspace\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={AppspaceHome}\r\n                    middleware={['readAuthenticationAppspace']}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Route\r\n                path=\"/login\"\r\n                render={(propsLocal: any) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={OaLogin}\r\n                  />\r\n                )}\r\n              />\r\n              {/* <Route\r\n                path=\"/\"\r\n                exact\r\n                render={(propsLocal: any) => (\r\n                  <Home {...propsLocal} {...props} logout={() => logout} />\r\n                )}\r\n              /> */}\r\n              <Route\r\n                path=\"/managespace\"\r\n                exact\r\n                render={propsLocal => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={ManageSpace}\r\n                    middleware={['authenticateOa']}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/manageapp\"\r\n                exact\r\n                render={propsLocal => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={ManageApp}\r\n                    middleware={['authenticateOa']}\r\n                  />\r\n                )}\r\n              />\r\n            </MuiThemeProvider>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  user: state.user,\r\n  profile: state.profile, // ,\r\n  //   event: state.event\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAuth,\r\n  addAuth,\r\n  removeAuth,\r\n  getProfile,\r\n  setProfile,\r\n})(withCookies(Content));\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport oneauthWhite from '../../images/oneauth_white.svg';\r\nimport oneauthBlack from '../../images/oneauth_black.svg';\r\n\r\nconst Logo = () => {\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  const profile = useSelector(state => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"logo\">\r\n      <img className=\"logo--image\" src={oneauthWhite} alt=\"Oneauth logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Logo from '../Logo';\r\nimport './HealthCheckFailed.scss';\r\n\r\nconst HealthCheckFailed = () => {\r\n  return (\r\n    <div className=\"health-check-failed\">\r\n      <div className=\"health-check-failed--logo\">\r\n        <Logo />\r\n      </div>\r\n      <div className=\"health-check-failed--message\">\r\n        We are working on improving your experience. We will be back soon. Check\r\n        back in few hours.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheckFailed;\r\n","import React, { useEffect, useState } from 'react';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport './HealthCheckProgress.scss';\r\n\r\nconst HealthCheckProgress = () => {\r\n  return (\r\n    <div className=\"health-check-progress\">\r\n      <OakSpinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheckProgress;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport constants from '../Constants';\r\nimport HealthCheckFailed from '../AppFallback/HealthCheckFailed';\r\nimport HealthCheckProgress from '../AppFallback/HealthCheckProgress';\r\n\r\nconst App = props => {\r\n  const [healthCheck, setHealthCheck] = useState({\r\n    isVerified: false,\r\n    allowAccess: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    httpGet(constants.API_HEALTHCHECK_HELLO, {})\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setHealthCheck({\r\n            ...healthCheck,\r\n            isVerified: true,\r\n            allowAccess: true,\r\n          });\r\n        } else {\r\n          setHealthCheck({\r\n            ...healthCheck,\r\n            isVerified: true,\r\n            allowAccess: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setHealthCheck({\r\n          ...healthCheck,\r\n          isVerified: true,\r\n          allowAccess: false,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      {healthCheck.isVerified && healthCheck.allowAccess && (\r\n        <Content {...props} />\r\n      )}\r\n      {healthCheck.isVerified && !healthCheck.allowAccess && (\r\n        <HealthCheckFailed />\r\n      )}\r\n      {!healthCheck.isVerified && <HealthCheckProgress />}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}